/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package lukehagar.plexapi.plexapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import lukehagar.plexapi.plexapi.utils.SpeakeasyMetadata;


public class GetResizedPhotoRequest {
    /**
     * The width for the resized photo
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=width")
    public Double width;

    public GetResizedPhotoRequest withWidth(Double width) {
        this.width = width;
        return this;
    }
    
    /**
     * The height for the resized photo
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=height")
    public Double height;

    public GetResizedPhotoRequest withHeight(Double height) {
        this.height = height;
        return this;
    }
    
    /**
     * The opacity for the resized photo
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=opacity")
    public Long opacity;

    public GetResizedPhotoRequest withOpacity(Long opacity) {
        this.opacity = opacity;
        return this;
    }
    
    /**
     * The width for the resized photo
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=blur")
    public Double blur;

    public GetResizedPhotoRequest withBlur(Double blur) {
        this.blur = blur;
        return this;
    }
    
    /**
     * images are always scaled proportionally. A value of '1' in minSize will make the smaller native dimension the dimension resized against.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=minSize")
    public MinSize minSize;

    public GetResizedPhotoRequest withMinSize(MinSize minSize) {
        this.minSize = minSize;
        return this;
    }
    
    /**
     * allow images to be resized beyond native dimensions.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=upscale")
    public Upscale upscale;

    public GetResizedPhotoRequest withUpscale(Upscale upscale) {
        this.upscale = upscale;
        return this;
    }
    
    /**
     * path to image within Plex
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=url")
    public String url;

    public GetResizedPhotoRequest withUrl(String url) {
        this.url = url;
        return this;
    }
    
    public GetResizedPhotoRequest(@JsonProperty("width") Double width, @JsonProperty("height") Double height, @JsonProperty("opacity") Long opacity, @JsonProperty("blur") Double blur, @JsonProperty("minSize") MinSize minSize, @JsonProperty("upscale") Upscale upscale, @JsonProperty("url") String url) {
        this.width = width;
        this.height = height;
        this.opacity = opacity;
        this.blur = blur;
        this.minSize = minSize;
        this.upscale = upscale;
        this.url = url;
  }
}
