/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package lukehagar.plexapi.plexapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import lukehagar.plexapi.plexapi.utils.SpeakeasyMetadata;


public class UploadPlaylistRequest {
    /**
     * absolute path to a directory on the server where m3u files are stored, or the absolute path to a playlist file on the server. 
     * If the `path` argument is a directory, that path will be scanned for playlist files to be processed. 
     * Each file in that directory creates a separate playlist, with a name based on the filename of the file that created it. 
     * The GUID of each playlist is based on the filename. 
     * If the `path` argument is a file, that file will be used to create a new playlist, with the name based on the filename of the file that created it. 
     * The GUID of each playlist is based on the filename.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=path")
    public String path;

    public UploadPlaylistRequest withPath(String path) {
        this.path = path;
        return this;
    }
    
    /**
     * Force overwriting of duplicate playlists.  
     * By default, a playlist file uploaded with the same path will overwrite the existing playlist. 
     * The `force` argument is used to disable overwriting.  
     * If the `force` argument is set to 0, a new playlist will be created suffixed with the date and time that the duplicate was uploaded.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=force")
    public Force force;

    public UploadPlaylistRequest withForce(Force force) {
        this.force = force;
        return this;
    }
    
    public UploadPlaylistRequest(@JsonProperty("path") String path, @JsonProperty("force") Force force) {
        this.path = path;
        this.force = force;
  }
}
