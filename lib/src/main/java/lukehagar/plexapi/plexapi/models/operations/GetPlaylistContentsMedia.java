/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package lukehagar.plexapi.plexapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;


public class GetPlaylistContentsMedia {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Integer id;

    public GetPlaylistContentsMedia withId(Integer id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public Integer duration;

    public GetPlaylistContentsMedia withDuration(Integer duration) {
        this.duration = duration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bitrate")
    public Integer bitrate;

    public GetPlaylistContentsMedia withBitrate(Integer bitrate) {
        this.bitrate = bitrate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("width")
    public Integer width;

    public GetPlaylistContentsMedia withWidth(Integer width) {
        this.width = width;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("height")
    public Integer height;

    public GetPlaylistContentsMedia withHeight(Integer height) {
        this.height = height;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("aspectRatio")
    public Double aspectRatio;

    public GetPlaylistContentsMedia withAspectRatio(Double aspectRatio) {
        this.aspectRatio = aspectRatio;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("audioChannels")
    public Integer audioChannels;

    public GetPlaylistContentsMedia withAudioChannels(Integer audioChannels) {
        this.audioChannels = audioChannels;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("audioCodec")
    public String audioCodec;

    public GetPlaylistContentsMedia withAudioCodec(String audioCodec) {
        this.audioCodec = audioCodec;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("videoCodec")
    public String videoCodec;

    public GetPlaylistContentsMedia withVideoCodec(String videoCodec) {
        this.videoCodec = videoCodec;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("videoResolution")
    public String videoResolution;

    public GetPlaylistContentsMedia withVideoResolution(String videoResolution) {
        this.videoResolution = videoResolution;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("container")
    public String container;

    public GetPlaylistContentsMedia withContainer(String container) {
        this.container = container;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("videoFrameRate")
    public String videoFrameRate;

    public GetPlaylistContentsMedia withVideoFrameRate(String videoFrameRate) {
        this.videoFrameRate = videoFrameRate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("optimizedForStreaming")
    public Integer optimizedForStreaming;

    public GetPlaylistContentsMedia withOptimizedForStreaming(Integer optimizedForStreaming) {
        this.optimizedForStreaming = optimizedForStreaming;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("audioProfile")
    public String audioProfile;

    public GetPlaylistContentsMedia withAudioProfile(String audioProfile) {
        this.audioProfile = audioProfile;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("has64bitOffsets")
    public Boolean has64bitOffsets;

    public GetPlaylistContentsMedia withHas64bitOffsets(Boolean has64bitOffsets) {
        this.has64bitOffsets = has64bitOffsets;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("videoProfile")
    public String videoProfile;

    public GetPlaylistContentsMedia withVideoProfile(String videoProfile) {
        this.videoProfile = videoProfile;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Part")
    public GetPlaylistContentsPart[] part;

    public GetPlaylistContentsMedia withPart(GetPlaylistContentsPart[] part) {
        this.part = part;
        return this;
    }
    
    public GetPlaylistContentsMedia(){}
}
