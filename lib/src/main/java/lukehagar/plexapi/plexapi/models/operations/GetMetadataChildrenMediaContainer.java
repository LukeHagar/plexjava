/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package lukehagar.plexapi.plexapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;


public class GetMetadataChildrenMediaContainer {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size")
    public Integer size;

    public GetMetadataChildrenMediaContainer withSize(Integer size) {
        this.size = size;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowSync")
    public Boolean allowSync;

    public GetMetadataChildrenMediaContainer withAllowSync(Boolean allowSync) {
        this.allowSync = allowSync;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("art")
    public String art;

    public GetMetadataChildrenMediaContainer withArt(String art) {
        this.art = art;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("identifier")
    public String identifier;

    public GetMetadataChildrenMediaContainer withIdentifier(String identifier) {
        this.identifier = identifier;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("key")
    public String key;

    public GetMetadataChildrenMediaContainer withKey(String key) {
        this.key = key;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("librarySectionID")
    public Integer librarySectionID;

    public GetMetadataChildrenMediaContainer withLibrarySectionID(Integer librarySectionID) {
        this.librarySectionID = librarySectionID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("librarySectionTitle")
    public String librarySectionTitle;

    public GetMetadataChildrenMediaContainer withLibrarySectionTitle(String librarySectionTitle) {
        this.librarySectionTitle = librarySectionTitle;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("librarySectionUUID")
    public String librarySectionUUID;

    public GetMetadataChildrenMediaContainer withLibrarySectionUUID(String librarySectionUUID) {
        this.librarySectionUUID = librarySectionUUID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mediaTagPrefix")
    public String mediaTagPrefix;

    public GetMetadataChildrenMediaContainer withMediaTagPrefix(String mediaTagPrefix) {
        this.mediaTagPrefix = mediaTagPrefix;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mediaTagVersion")
    public Integer mediaTagVersion;

    public GetMetadataChildrenMediaContainer withMediaTagVersion(Integer mediaTagVersion) {
        this.mediaTagVersion = mediaTagVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nocache")
    public Boolean nocache;

    public GetMetadataChildrenMediaContainer withNocache(Boolean nocache) {
        this.nocache = nocache;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentIndex")
    public Integer parentIndex;

    public GetMetadataChildrenMediaContainer withParentIndex(Integer parentIndex) {
        this.parentIndex = parentIndex;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentTitle")
    public String parentTitle;

    public GetMetadataChildrenMediaContainer withParentTitle(String parentTitle) {
        this.parentTitle = parentTitle;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentYear")
    public Integer parentYear;

    public GetMetadataChildrenMediaContainer withParentYear(Integer parentYear) {
        this.parentYear = parentYear;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("summary")
    public String summary;

    public GetMetadataChildrenMediaContainer withSummary(String summary) {
        this.summary = summary;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("theme")
    public String theme;

    public GetMetadataChildrenMediaContainer withTheme(String theme) {
        this.theme = theme;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thumb")
    public String thumb;

    public GetMetadataChildrenMediaContainer withThumb(String thumb) {
        this.thumb = thumb;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title1")
    public String title1;

    public GetMetadataChildrenMediaContainer withTitle1(String title1) {
        this.title1 = title1;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title2")
    public String title2;

    public GetMetadataChildrenMediaContainer withTitle2(String title2) {
        this.title2 = title2;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("viewGroup")
    public String viewGroup;

    public GetMetadataChildrenMediaContainer withViewGroup(String viewGroup) {
        this.viewGroup = viewGroup;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("viewMode")
    public Integer viewMode;

    public GetMetadataChildrenMediaContainer withViewMode(Integer viewMode) {
        this.viewMode = viewMode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Directory")
    public GetMetadataChildrenDirectory[] directory;

    public GetMetadataChildrenMediaContainer withDirectory(GetMetadataChildrenDirectory[] directory) {
        this.directory = directory;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Metadata")
    public GetMetadataChildrenMetadata[] metadata;

    public GetMetadataChildrenMediaContainer withMetadata(GetMetadataChildrenMetadata[] metadata) {
        this.metadata = metadata;
        return this;
    }
    
    public GetMetadataChildrenMediaContainer(){}
}
