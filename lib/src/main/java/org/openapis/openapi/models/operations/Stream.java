/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;


public class Stream {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Double id;

    public Stream withId(Double id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("streamType")
    public Double streamType;

    public Stream withStreamType(Double streamType) {
        this.streamType = streamType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("default")
    public Boolean default_;

    public Stream withDefault(Boolean default_) {
        this.default_ = default_;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("codec")
    public String codec;

    public Stream withCodec(String codec) {
        this.codec = codec;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("index")
    public Double index;

    public Stream withIndex(Double index) {
        this.index = index;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bitrate")
    public Double bitrate;

    public Stream withBitrate(Double bitrate) {
        this.bitrate = bitrate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("language")
    public String language;

    public Stream withLanguage(String language) {
        this.language = language;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("languageTag")
    public String languageTag;

    public Stream withLanguageTag(String languageTag) {
        this.languageTag = languageTag;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("languageCode")
    public String languageCode;

    public Stream withLanguageCode(String languageCode) {
        this.languageCode = languageCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bitDepth")
    public Double bitDepth;

    public Stream withBitDepth(Double bitDepth) {
        this.bitDepth = bitDepth;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chromaLocation")
    public String chromaLocation;

    public Stream withChromaLocation(String chromaLocation) {
        this.chromaLocation = chromaLocation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chromaSubsampling")
    public String chromaSubsampling;

    public Stream withChromaSubsampling(String chromaSubsampling) {
        this.chromaSubsampling = chromaSubsampling;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("codedHeight")
    public Double codedHeight;

    public Stream withCodedHeight(Double codedHeight) {
        this.codedHeight = codedHeight;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("codedWidth")
    public Double codedWidth;

    public Stream withCodedWidth(Double codedWidth) {
        this.codedWidth = codedWidth;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("colorRange")
    public String colorRange;

    public Stream withColorRange(String colorRange) {
        this.colorRange = colorRange;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("frameRate")
    public Double frameRate;

    public Stream withFrameRate(Double frameRate) {
        this.frameRate = frameRate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("height")
    public Double height;

    public Stream withHeight(Double height) {
        this.height = height;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("level")
    public Double level;

    public Stream withLevel(Double level) {
        this.level = level;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("profile")
    public String profile;

    public Stream withProfile(String profile) {
        this.profile = profile;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refFrames")
    public Double refFrames;

    public Stream withRefFrames(Double refFrames) {
        this.refFrames = refFrames;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("width")
    public Double width;

    public Stream withWidth(Double width) {
        this.width = width;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayTitle")
    public String displayTitle;

    public Stream withDisplayTitle(String displayTitle) {
        this.displayTitle = displayTitle;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("extendedDisplayTitle")
    public String extendedDisplayTitle;

    public Stream withExtendedDisplayTitle(String extendedDisplayTitle) {
        this.extendedDisplayTitle = extendedDisplayTitle;
        return this;
    }
    
    public Stream(){}
}
