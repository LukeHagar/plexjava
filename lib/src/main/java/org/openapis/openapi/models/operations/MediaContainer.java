/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;


public class MediaContainer {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size")
    public Double size;

    public MediaContainer withSize(Double size) {
        this.size = size;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowCameraUpload")
    public Boolean allowCameraUpload;

    public MediaContainer withAllowCameraUpload(Boolean allowCameraUpload) {
        this.allowCameraUpload = allowCameraUpload;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowChannelAccess")
    public Boolean allowChannelAccess;

    public MediaContainer withAllowChannelAccess(Boolean allowChannelAccess) {
        this.allowChannelAccess = allowChannelAccess;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowMediaDeletion")
    public Boolean allowMediaDeletion;

    public MediaContainer withAllowMediaDeletion(Boolean allowMediaDeletion) {
        this.allowMediaDeletion = allowMediaDeletion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowSharing")
    public Boolean allowSharing;

    public MediaContainer withAllowSharing(Boolean allowSharing) {
        this.allowSharing = allowSharing;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowSync")
    public Boolean allowSync;

    public MediaContainer withAllowSync(Boolean allowSync) {
        this.allowSync = allowSync;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowTuners")
    public Boolean allowTuners;

    public MediaContainer withAllowTuners(Boolean allowTuners) {
        this.allowTuners = allowTuners;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("backgroundProcessing")
    public Boolean backgroundProcessing;

    public MediaContainer withBackgroundProcessing(Boolean backgroundProcessing) {
        this.backgroundProcessing = backgroundProcessing;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("certificate")
    public Boolean certificate;

    public MediaContainer withCertificate(Boolean certificate) {
        this.certificate = certificate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("companionProxy")
    public Boolean companionProxy;

    public MediaContainer withCompanionProxy(Boolean companionProxy) {
        this.companionProxy = companionProxy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("countryCode")
    public String countryCode;

    public MediaContainer withCountryCode(String countryCode) {
        this.countryCode = countryCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("diagnostics")
    public String diagnostics;

    public MediaContainer withDiagnostics(String diagnostics) {
        this.diagnostics = diagnostics;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventStream")
    public Boolean eventStream;

    public MediaContainer withEventStream(Boolean eventStream) {
        this.eventStream = eventStream;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("friendlyName")
    public String friendlyName;

    public MediaContainer withFriendlyName(String friendlyName) {
        this.friendlyName = friendlyName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hubSearch")
    public Boolean hubSearch;

    public MediaContainer withHubSearch(Boolean hubSearch) {
        this.hubSearch = hubSearch;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemClusters")
    public Boolean itemClusters;

    public MediaContainer withItemClusters(Boolean itemClusters) {
        this.itemClusters = itemClusters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("livetv")
    public Double livetv;

    public MediaContainer withLivetv(Double livetv) {
        this.livetv = livetv;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("machineIdentifier")
    public String machineIdentifier;

    public MediaContainer withMachineIdentifier(String machineIdentifier) {
        this.machineIdentifier = machineIdentifier;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mediaProviders")
    public Boolean mediaProviders;

    public MediaContainer withMediaProviders(Boolean mediaProviders) {
        this.mediaProviders = mediaProviders;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("multiuser")
    public Boolean multiuser;

    public MediaContainer withMultiuser(Boolean multiuser) {
        this.multiuser = multiuser;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("musicAnalysis")
    public Double musicAnalysis;

    public MediaContainer withMusicAnalysis(Double musicAnalysis) {
        this.musicAnalysis = musicAnalysis;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("myPlex")
    public Boolean myPlex;

    public MediaContainer withMyPlex(Boolean myPlex) {
        this.myPlex = myPlex;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("myPlexMappingState")
    public String myPlexMappingState;

    public MediaContainer withMyPlexMappingState(String myPlexMappingState) {
        this.myPlexMappingState = myPlexMappingState;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("myPlexSigninState")
    public String myPlexSigninState;

    public MediaContainer withMyPlexSigninState(String myPlexSigninState) {
        this.myPlexSigninState = myPlexSigninState;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("myPlexSubscription")
    public Boolean myPlexSubscription;

    public MediaContainer withMyPlexSubscription(Boolean myPlexSubscription) {
        this.myPlexSubscription = myPlexSubscription;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("myPlexUsername")
    public String myPlexUsername;

    public MediaContainer withMyPlexUsername(String myPlexUsername) {
        this.myPlexUsername = myPlexUsername;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offlineTranscode")
    public Double offlineTranscode;

    public MediaContainer withOfflineTranscode(Double offlineTranscode) {
        this.offlineTranscode = offlineTranscode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ownerFeatures")
    public String ownerFeatures;

    public MediaContainer withOwnerFeatures(String ownerFeatures) {
        this.ownerFeatures = ownerFeatures;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("photoAutoTag")
    public Boolean photoAutoTag;

    public MediaContainer withPhotoAutoTag(Boolean photoAutoTag) {
        this.photoAutoTag = photoAutoTag;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("platform")
    public String platform;

    public MediaContainer withPlatform(String platform) {
        this.platform = platform;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("platformVersion")
    public String platformVersion;

    public MediaContainer withPlatformVersion(String platformVersion) {
        this.platformVersion = platformVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pluginHost")
    public Boolean pluginHost;

    public MediaContainer withPluginHost(Boolean pluginHost) {
        this.pluginHost = pluginHost;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pushNotifications")
    public Boolean pushNotifications;

    public MediaContainer withPushNotifications(Boolean pushNotifications) {
        this.pushNotifications = pushNotifications;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("readOnlyLibraries")
    public Boolean readOnlyLibraries;

    public MediaContainer withReadOnlyLibraries(Boolean readOnlyLibraries) {
        this.readOnlyLibraries = readOnlyLibraries;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("streamingBrainABRVersion")
    public Double streamingBrainABRVersion;

    public MediaContainer withStreamingBrainABRVersion(Double streamingBrainABRVersion) {
        this.streamingBrainABRVersion = streamingBrainABRVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("streamingBrainVersion")
    public Double streamingBrainVersion;

    public MediaContainer withStreamingBrainVersion(Double streamingBrainVersion) {
        this.streamingBrainVersion = streamingBrainVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sync")
    public Boolean sync;

    public MediaContainer withSync(Boolean sync) {
        this.sync = sync;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transcoderActiveVideoSessions")
    public Double transcoderActiveVideoSessions;

    public MediaContainer withTranscoderActiveVideoSessions(Double transcoderActiveVideoSessions) {
        this.transcoderActiveVideoSessions = transcoderActiveVideoSessions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transcoderAudio")
    public Boolean transcoderAudio;

    public MediaContainer withTranscoderAudio(Boolean transcoderAudio) {
        this.transcoderAudio = transcoderAudio;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transcoderLyrics")
    public Boolean transcoderLyrics;

    public MediaContainer withTranscoderLyrics(Boolean transcoderLyrics) {
        this.transcoderLyrics = transcoderLyrics;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transcoderPhoto")
    public Boolean transcoderPhoto;

    public MediaContainer withTranscoderPhoto(Boolean transcoderPhoto) {
        this.transcoderPhoto = transcoderPhoto;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transcoderSubtitles")
    public Boolean transcoderSubtitles;

    public MediaContainer withTranscoderSubtitles(Boolean transcoderSubtitles) {
        this.transcoderSubtitles = transcoderSubtitles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transcoderVideo")
    public Boolean transcoderVideo;

    public MediaContainer withTranscoderVideo(Boolean transcoderVideo) {
        this.transcoderVideo = transcoderVideo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transcoderVideoBitrates")
    public String transcoderVideoBitrates;

    public MediaContainer withTranscoderVideoBitrates(String transcoderVideoBitrates) {
        this.transcoderVideoBitrates = transcoderVideoBitrates;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transcoderVideoQualities")
    public String transcoderVideoQualities;

    public MediaContainer withTranscoderVideoQualities(String transcoderVideoQualities) {
        this.transcoderVideoQualities = transcoderVideoQualities;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transcoderVideoResolutions")
    public String transcoderVideoResolutions;

    public MediaContainer withTranscoderVideoResolutions(String transcoderVideoResolutions) {
        this.transcoderVideoResolutions = transcoderVideoResolutions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updatedAt")
    public Double updatedAt;

    public MediaContainer withUpdatedAt(Double updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updater")
    public Boolean updater;

    public MediaContainer withUpdater(Boolean updater) {
        this.updater = updater;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public String version;

    public MediaContainer withVersion(String version) {
        this.version = version;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("voiceSearch")
    public Boolean voiceSearch;

    public MediaContainer withVoiceSearch(Boolean voiceSearch) {
        this.voiceSearch = voiceSearch;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Directory")
    public Directory[] directory;

    public MediaContainer withDirectory(Directory[] directory) {
        this.directory = directory;
        return this;
    }
    
    public MediaContainer(){}
}
