/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.plexapi.sdk.models.operations.async;

import static dev.plexapi.sdk.operations.Operations.AsyncRequestOperation;

import dev.plexapi.sdk.SDKConfiguration;
import dev.plexapi.sdk.models.operations.PostUsersSignInDataRequest;
import dev.plexapi.sdk.operations.PostUsersSignInData;
import dev.plexapi.sdk.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;

public class PostUsersSignInDataRequestBuilder {

    private PostUsersSignInDataRequest request;
    private Optional<String> serverURL = Optional.empty();
    private final SDKConfiguration sdkConfiguration;

    public PostUsersSignInDataRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public PostUsersSignInDataRequestBuilder request(PostUsersSignInDataRequest request) {
        Utils.checkNotNull(request, "request");
        this.request = request;
        return this;
    }
                
    public PostUsersSignInDataRequestBuilder serverURL(String serverURL) {
        Utils.checkNotNull(serverURL, "serverURL");
        this.serverURL = Optional.of(serverURL);
        return this;
    }

    public PostUsersSignInDataRequestBuilder serverURL(Optional<String> serverURL) {
        Utils.checkNotNull(serverURL, "serverURL");
        this.serverURL = serverURL;
        return this;
    }

    public CompletableFuture<PostUsersSignInDataResponse> call() throws Exception {
        
        AsyncRequestOperation<PostUsersSignInDataRequest, PostUsersSignInDataResponse> operation
              = new PostUsersSignInData.Async(sdkConfiguration, serverURL);

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
