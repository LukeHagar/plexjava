/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.plexapi.sdk.models.operations.async;

import static dev.plexapi.sdk.operations.Operations.AsyncRequestOperation;

import dev.plexapi.sdk.SDKConfiguration;
import dev.plexapi.sdk.models.operations.GetPlaylistContentsQueryParamType;
import dev.plexapi.sdk.models.operations.GetPlaylistContentsRequest;
import dev.plexapi.sdk.operations.GetPlaylistContents;
import dev.plexapi.sdk.utils.Utils;
import java.lang.Double;
import java.lang.Exception;
import java.util.concurrent.CompletableFuture;

public class GetPlaylistContentsRequestBuilder {

    private Double playlistID;
    private GetPlaylistContentsQueryParamType type;
    private final SDKConfiguration sdkConfiguration;

    public GetPlaylistContentsRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public GetPlaylistContentsRequestBuilder playlistID(double playlistID) {
        Utils.checkNotNull(playlistID, "playlistID");
        this.playlistID = playlistID;
        return this;
    }

    public GetPlaylistContentsRequestBuilder type(GetPlaylistContentsQueryParamType type) {
        Utils.checkNotNull(type, "type");
        this.type = type;
        return this;
    }


    private GetPlaylistContentsRequest buildRequest() {

        GetPlaylistContentsRequest request = new GetPlaylistContentsRequest(playlistID,
            type);

        return request;
    }

    public CompletableFuture<GetPlaylistContentsResponse> call() throws Exception {
        
        AsyncRequestOperation<GetPlaylistContentsRequest, GetPlaylistContentsResponse> operation
              = new GetPlaylistContents.Async(sdkConfiguration);
        GetPlaylistContentsRequest request = buildRequest();

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
