/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.plexapi.sdk.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import dev.plexapi.sdk.utils.SpeakeasyMetadata;
import dev.plexapi.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;

public class CancelServerActivitiesRequest {

    /**
     * The UUID of the activity to cancel.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=activityUUID")
    private String activityUUID;

    @JsonCreator
    public CancelServerActivitiesRequest(
            String activityUUID) {
        Utils.checkNotNull(activityUUID, "activityUUID");
        this.activityUUID = activityUUID;
    }

    /**
     * The UUID of the activity to cancel.
     */
    @JsonIgnore
    public String activityUUID() {
        return activityUUID;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * The UUID of the activity to cancel.
     */
    public CancelServerActivitiesRequest withActivityUUID(String activityUUID) {
        Utils.checkNotNull(activityUUID, "activityUUID");
        this.activityUUID = activityUUID;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CancelServerActivitiesRequest other = (CancelServerActivitiesRequest) o;
        return 
            Objects.deepEquals(this.activityUUID, other.activityUUID);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            activityUUID);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CancelServerActivitiesRequest.class,
                "activityUUID", activityUUID);
    }
    
    public final static class Builder {
 
        private String activityUUID;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The UUID of the activity to cancel.
         */
        public Builder activityUUID(String activityUUID) {
            Utils.checkNotNull(activityUUID, "activityUUID");
            this.activityUUID = activityUUID;
            return this;
        }
        
        public CancelServerActivitiesRequest build() {
            return new CancelServerActivitiesRequest(
                activityUUID);
        }
    }
}
