/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.plexapi.sdk.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import dev.plexapi.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;


public class GetMediaMetaDataImage {

    @JsonProperty("alt")
    private String alt;


    @JsonProperty("type")
    private GetMediaMetaDataLibraryType type;


    @JsonProperty("url")
    private String url;

    @JsonCreator
    public GetMediaMetaDataImage(
            @JsonProperty("alt") String alt,
            @JsonProperty("type") GetMediaMetaDataLibraryType type,
            @JsonProperty("url") String url) {
        Utils.checkNotNull(alt, "alt");
        Utils.checkNotNull(type, "type");
        Utils.checkNotNull(url, "url");
        this.alt = alt;
        this.type = type;
        this.url = url;
    }

    @JsonIgnore
    public String alt() {
        return alt;
    }

    @JsonIgnore
    public GetMediaMetaDataLibraryType type() {
        return type;
    }

    @JsonIgnore
    public String url() {
        return url;
    }

    public static Builder builder() {
        return new Builder();
    }


    public GetMediaMetaDataImage withAlt(String alt) {
        Utils.checkNotNull(alt, "alt");
        this.alt = alt;
        return this;
    }

    public GetMediaMetaDataImage withType(GetMediaMetaDataLibraryType type) {
        Utils.checkNotNull(type, "type");
        this.type = type;
        return this;
    }

    public GetMediaMetaDataImage withUrl(String url) {
        Utils.checkNotNull(url, "url");
        this.url = url;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetMediaMetaDataImage other = (GetMediaMetaDataImage) o;
        return 
            Utils.enhancedDeepEquals(this.alt, other.alt) &&
            Utils.enhancedDeepEquals(this.type, other.type) &&
            Utils.enhancedDeepEquals(this.url, other.url);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            alt, type, url);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetMediaMetaDataImage.class,
                "alt", alt,
                "type", type,
                "url", url);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String alt;

        private GetMediaMetaDataLibraryType type;

        private String url;

        private Builder() {
          // force use of static builder() method
        }


        public Builder alt(String alt) {
            Utils.checkNotNull(alt, "alt");
            this.alt = alt;
            return this;
        }


        public Builder type(GetMediaMetaDataLibraryType type) {
            Utils.checkNotNull(type, "type");
            this.type = type;
            return this;
        }


        public Builder url(String url) {
            Utils.checkNotNull(url, "url");
            this.url = url;
            return this;
        }

        public GetMediaMetaDataImage build() {

            return new GetMediaMetaDataImage(
                alt, type, url);
        }

    }
}
