/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.plexapi.sdk.models.operations.async;

import static dev.plexapi.sdk.operations.Operations.AsyncRequestOperation;

import dev.plexapi.sdk.SDKConfiguration;
import dev.plexapi.sdk.models.operations.StartTaskRequest;
import dev.plexapi.sdk.models.operations.TaskName;
import dev.plexapi.sdk.operations.StartTask;
import dev.plexapi.sdk.utils.Utils;
import java.lang.Exception;
import java.util.concurrent.CompletableFuture;

public class StartTaskRequestBuilder {

    private TaskName taskName;
    private final SDKConfiguration sdkConfiguration;

    public StartTaskRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public StartTaskRequestBuilder taskName(TaskName taskName) {
        Utils.checkNotNull(taskName, "taskName");
        this.taskName = taskName;
        return this;
    }


    private StartTaskRequest buildRequest() {

        StartTaskRequest request = new StartTaskRequest(taskName);

        return request;
    }

    public CompletableFuture<StartTaskResponse> call() throws Exception {
        
        AsyncRequestOperation<StartTaskRequest, StartTaskResponse> operation
              = new StartTask.Async(sdkConfiguration);
        StartTaskRequest request = buildRequest();

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
