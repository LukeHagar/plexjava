/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.plexapi.sdk.models.operations.async;

import static dev.plexapi.sdk.operations.Operations.AsyncRequestOperation;

import dev.plexapi.sdk.SDKConfiguration;
import dev.plexapi.sdk.models.operations.GetResourcesStatisticsRequest;
import dev.plexapi.sdk.operations.GetResourcesStatistics;
import dev.plexapi.sdk.utils.Utils;
import java.lang.Exception;
import java.lang.Long;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;

public class GetResourcesStatisticsRequestBuilder {

    private Optional<Long> timespan = Optional.empty();
    private final SDKConfiguration sdkConfiguration;

    public GetResourcesStatisticsRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
                
    public GetResourcesStatisticsRequestBuilder timespan(long timespan) {
        Utils.checkNotNull(timespan, "timespan");
        this.timespan = Optional.of(timespan);
        return this;
    }

    public GetResourcesStatisticsRequestBuilder timespan(Optional<Long> timespan) {
        Utils.checkNotNull(timespan, "timespan");
        this.timespan = timespan;
        return this;
    }


    private GetResourcesStatisticsRequest buildRequest() {

        GetResourcesStatisticsRequest request = new GetResourcesStatisticsRequest(timespan);

        return request;
    }

    public CompletableFuture<GetResourcesStatisticsResponse> call() throws Exception {
        
        AsyncRequestOperation<GetResourcesStatisticsRequest, GetResourcesStatisticsResponse> operation
              = new GetResourcesStatistics.Async(sdkConfiguration);
        GetResourcesStatisticsRequest request = buildRequest();

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
