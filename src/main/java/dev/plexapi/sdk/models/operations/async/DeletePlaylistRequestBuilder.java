/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.plexapi.sdk.models.operations.async;

import static dev.plexapi.sdk.operations.Operations.AsyncRequestOperation;

import dev.plexapi.sdk.SDKConfiguration;
import dev.plexapi.sdk.models.operations.DeletePlaylistRequest;
import dev.plexapi.sdk.operations.DeletePlaylist;
import dev.plexapi.sdk.utils.Utils;
import java.lang.Double;
import java.lang.Exception;
import java.util.concurrent.CompletableFuture;

public class DeletePlaylistRequestBuilder {

    private Double playlistID;
    private final SDKConfiguration sdkConfiguration;

    public DeletePlaylistRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public DeletePlaylistRequestBuilder playlistID(double playlistID) {
        Utils.checkNotNull(playlistID, "playlistID");
        this.playlistID = playlistID;
        return this;
    }


    private DeletePlaylistRequest buildRequest() {

        DeletePlaylistRequest request = new DeletePlaylistRequest(playlistID);

        return request;
    }

    public CompletableFuture<DeletePlaylistResponse> call() throws Exception {
        
        AsyncRequestOperation<DeletePlaylistRequest, DeletePlaylistResponse> operation
              = new DeletePlaylist.Async(sdkConfiguration);
        DeletePlaylistRequest request = buildRequest();

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
