/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.plexapi.sdk.models.operations.async;

import static dev.plexapi.sdk.operations.Operations.AsyncRequestOperation;

import dev.plexapi.sdk.SDKConfiguration;
import dev.plexapi.sdk.models.operations.GetSearchResultsRequest;
import dev.plexapi.sdk.operations.GetSearchResults;
import dev.plexapi.sdk.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.concurrent.CompletableFuture;

public class GetSearchResultsRequestBuilder {

    private String query;
    private final SDKConfiguration sdkConfiguration;

    public GetSearchResultsRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public GetSearchResultsRequestBuilder query(String query) {
        Utils.checkNotNull(query, "query");
        this.query = query;
        return this;
    }


    private GetSearchResultsRequest buildRequest() {

        GetSearchResultsRequest request = new GetSearchResultsRequest(query);

        return request;
    }

    public CompletableFuture<GetSearchResultsResponse> call() throws Exception {
        
        AsyncRequestOperation<GetSearchResultsRequest, GetSearchResultsResponse> operation
              = new GetSearchResults.Async(sdkConfiguration);
        GetSearchResultsRequest request = buildRequest();

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
