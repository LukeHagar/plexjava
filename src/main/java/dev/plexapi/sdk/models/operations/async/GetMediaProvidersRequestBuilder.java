/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.plexapi.sdk.models.operations.async;

import static dev.plexapi.sdk.operations.Operations.AsyncRequestOperation;

import dev.plexapi.sdk.SDKConfiguration;
import dev.plexapi.sdk.models.operations.GetMediaProvidersRequest;
import dev.plexapi.sdk.operations.GetMediaProviders;
import dev.plexapi.sdk.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.concurrent.CompletableFuture;

public class GetMediaProvidersRequestBuilder {

    private String xPlexToken;
    private final SDKConfiguration sdkConfiguration;

    public GetMediaProvidersRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public GetMediaProvidersRequestBuilder xPlexToken(String xPlexToken) {
        Utils.checkNotNull(xPlexToken, "xPlexToken");
        this.xPlexToken = xPlexToken;
        return this;
    }


    private GetMediaProvidersRequest buildRequest() {

        GetMediaProvidersRequest request = new GetMediaProvidersRequest(xPlexToken);

        return request;
    }

    public CompletableFuture<GetMediaProvidersResponse> call() throws Exception {
        
        AsyncRequestOperation<GetMediaProvidersRequest, GetMediaProvidersResponse> operation
              = new GetMediaProviders.Async(sdkConfiguration);
        GetMediaProvidersRequest request = buildRequest();

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
