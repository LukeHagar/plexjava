/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.plexapi.sdk.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.core.type.TypeReference;
import dev.plexapi.sdk.utils.LazySingletonValue;
import dev.plexapi.sdk.utils.SpeakeasyMetadata;
import dev.plexapi.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Optional;


public class GetTopWatchedContentRequest {
    /**
     * The type of media to retrieve or filter by.
     * 1 = movie
     * 2 = show
     * 3 = season
     * 4 = episode
     * E.g. A movie library will not return anything with type 3 as there are no seasons for movie libraries
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=type")
    private GetTopWatchedContentQueryParamType type;

    /**
     * Adds the Guid object to the response
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=includeGuids")
    private Optional<? extends GetTopWatchedContentQueryParamIncludeGuids> includeGuids;

    @JsonCreator
    public GetTopWatchedContentRequest(
            GetTopWatchedContentQueryParamType type,
            Optional<? extends GetTopWatchedContentQueryParamIncludeGuids> includeGuids) {
        Utils.checkNotNull(type, "type");
        Utils.checkNotNull(includeGuids, "includeGuids");
        this.type = type;
        this.includeGuids = includeGuids;
    }
    
    public GetTopWatchedContentRequest(
            GetTopWatchedContentQueryParamType type) {
        this(type, Optional.empty());
    }

    /**
     * The type of media to retrieve or filter by.
     * 1 = movie
     * 2 = show
     * 3 = season
     * 4 = episode
     * E.g. A movie library will not return anything with type 3 as there are no seasons for movie libraries
     */
    @JsonIgnore
    public GetTopWatchedContentQueryParamType type() {
        return type;
    }

    /**
     * Adds the Guid object to the response
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetTopWatchedContentQueryParamIncludeGuids> includeGuids() {
        return (Optional<GetTopWatchedContentQueryParamIncludeGuids>) includeGuids;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The type of media to retrieve or filter by.
     * 1 = movie
     * 2 = show
     * 3 = season
     * 4 = episode
     * E.g. A movie library will not return anything with type 3 as there are no seasons for movie libraries
     */
    public GetTopWatchedContentRequest withType(GetTopWatchedContentQueryParamType type) {
        Utils.checkNotNull(type, "type");
        this.type = type;
        return this;
    }

    /**
     * Adds the Guid object to the response
     */
    public GetTopWatchedContentRequest withIncludeGuids(GetTopWatchedContentQueryParamIncludeGuids includeGuids) {
        Utils.checkNotNull(includeGuids, "includeGuids");
        this.includeGuids = Optional.ofNullable(includeGuids);
        return this;
    }


    /**
     * Adds the Guid object to the response
     */
    public GetTopWatchedContentRequest withIncludeGuids(Optional<? extends GetTopWatchedContentQueryParamIncludeGuids> includeGuids) {
        Utils.checkNotNull(includeGuids, "includeGuids");
        this.includeGuids = includeGuids;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetTopWatchedContentRequest other = (GetTopWatchedContentRequest) o;
        return 
            Utils.enhancedDeepEquals(this.type, other.type) &&
            Utils.enhancedDeepEquals(this.includeGuids, other.includeGuids);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            type, includeGuids);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetTopWatchedContentRequest.class,
                "type", type,
                "includeGuids", includeGuids);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private GetTopWatchedContentQueryParamType type;

        private Optional<? extends GetTopWatchedContentQueryParamIncludeGuids> includeGuids;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * The type of media to retrieve or filter by.
         * 1 = movie
         * 2 = show
         * 3 = season
         * 4 = episode
         * E.g. A movie library will not return anything with type 3 as there are no seasons for movie libraries
         */
        public Builder type(GetTopWatchedContentQueryParamType type) {
            Utils.checkNotNull(type, "type");
            this.type = type;
            return this;
        }


        /**
         * Adds the Guid object to the response
         */
        public Builder includeGuids(GetTopWatchedContentQueryParamIncludeGuids includeGuids) {
            Utils.checkNotNull(includeGuids, "includeGuids");
            this.includeGuids = Optional.ofNullable(includeGuids);
            return this;
        }

        /**
         * Adds the Guid object to the response
         */
        public Builder includeGuids(Optional<? extends GetTopWatchedContentQueryParamIncludeGuids> includeGuids) {
            Utils.checkNotNull(includeGuids, "includeGuids");
            this.includeGuids = includeGuids;
            return this;
        }

        public GetTopWatchedContentRequest build() {
            if (includeGuids == null) {
                includeGuids = _SINGLETON_VALUE_IncludeGuids.value();
            }

            return new GetTopWatchedContentRequest(
                type, includeGuids);
        }


        private static final LazySingletonValue<Optional<? extends GetTopWatchedContentQueryParamIncludeGuids>> _SINGLETON_VALUE_IncludeGuids =
                new LazySingletonValue<>(
                        "includeGuids",
                        "0",
                        new TypeReference<Optional<? extends GetTopWatchedContentQueryParamIncludeGuids>>() {});
    }
}
