/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.plexapi.sdk.models.operations.async;

import static dev.plexapi.sdk.operations.Operations.AsyncRequestOperation;

import dev.plexapi.sdk.SDKConfiguration;
import dev.plexapi.sdk.models.operations.DeleteLibraryRequest;
import dev.plexapi.sdk.operations.DeleteLibrary;
import dev.plexapi.sdk.utils.Utils;
import java.lang.Exception;
import java.lang.Integer;
import java.util.concurrent.CompletableFuture;

public class DeleteLibraryRequestBuilder {

    private Integer sectionKey;
    private final SDKConfiguration sdkConfiguration;

    public DeleteLibraryRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public DeleteLibraryRequestBuilder sectionKey(int sectionKey) {
        Utils.checkNotNull(sectionKey, "sectionKey");
        this.sectionKey = sectionKey;
        return this;
    }


    private DeleteLibraryRequest buildRequest() {

        DeleteLibraryRequest request = new DeleteLibraryRequest(sectionKey);

        return request;
    }

    public CompletableFuture<DeleteLibraryResponse> call() throws Exception {
        
        AsyncRequestOperation<DeleteLibraryRequest, DeleteLibraryResponse> operation
              = new DeleteLibrary.Async(sdkConfiguration);
        DeleteLibraryRequest request = buildRequest();

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
