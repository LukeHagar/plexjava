/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.plexapi.sdk.models.operations.async;

import static dev.plexapi.sdk.operations.Operations.AsyncRequestOperation;

import dev.plexapi.sdk.SDKConfiguration;
import dev.plexapi.sdk.models.operations.GetMediaArtsRequest;
import dev.plexapi.sdk.operations.GetMediaArts;
import dev.plexapi.sdk.utils.Utils;
import java.lang.Exception;
import java.lang.Long;
import java.util.concurrent.CompletableFuture;

public class GetMediaArtsRequestBuilder {

    private Long ratingKey;
    private final SDKConfiguration sdkConfiguration;

    public GetMediaArtsRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public GetMediaArtsRequestBuilder ratingKey(long ratingKey) {
        Utils.checkNotNull(ratingKey, "ratingKey");
        this.ratingKey = ratingKey;
        return this;
    }


    private GetMediaArtsRequest buildRequest() {

        GetMediaArtsRequest request = new GetMediaArtsRequest(ratingKey);

        return request;
    }

    public CompletableFuture<GetMediaArtsResponse> call() throws Exception {
        
        AsyncRequestOperation<GetMediaArtsRequest, GetMediaArtsResponse> operation
              = new GetMediaArts.Async(sdkConfiguration);
        GetMediaArtsRequest request = buildRequest();

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
