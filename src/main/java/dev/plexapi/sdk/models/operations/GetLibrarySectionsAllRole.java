/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.plexapi.sdk.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import dev.plexapi.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;


public class GetLibrarySectionsAllRole {
    /**
     * The display tag for the actor (typically the actor's name).
     */
    @JsonProperty("tag")
    private String tag;

    @JsonCreator
    public GetLibrarySectionsAllRole(
            @JsonProperty("tag") String tag) {
        Utils.checkNotNull(tag, "tag");
        this.tag = tag;
    }

    /**
     * The display tag for the actor (typically the actor's name).
     */
    @JsonIgnore
    public String tag() {
        return tag;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The display tag for the actor (typically the actor's name).
     */
    public GetLibrarySectionsAllRole withTag(String tag) {
        Utils.checkNotNull(tag, "tag");
        this.tag = tag;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetLibrarySectionsAllRole other = (GetLibrarySectionsAllRole) o;
        return 
            Utils.enhancedDeepEquals(this.tag, other.tag);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            tag);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetLibrarySectionsAllRole.class,
                "tag", tag);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String tag;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * The display tag for the actor (typically the actor's name).
         */
        public Builder tag(String tag) {
            Utils.checkNotNull(tag, "tag");
            this.tag = tag;
            return this;
        }

        public GetLibrarySectionsAllRole build() {

            return new GetLibrarySectionsAllRole(
                tag);
        }

    }
}
