/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.plexapi.sdk.models.operations;

import static dev.plexapi.sdk.operations.Operations.RequestOperation;

import dev.plexapi.sdk.SDKConfiguration;
import dev.plexapi.sdk.operations.GetGlobalHubs;
import dev.plexapi.sdk.utils.Utils;
import java.lang.Double;
import java.lang.Exception;
import java.util.Optional;

public class GetGlobalHubsRequestBuilder {

    private Optional<Double> count = Optional.empty();
    private Optional<? extends OnlyTransient> onlyTransient = Optional.empty();
    private final SDKConfiguration sdkConfiguration;

    public GetGlobalHubsRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
                
    public GetGlobalHubsRequestBuilder count(double count) {
        Utils.checkNotNull(count, "count");
        this.count = Optional.of(count);
        return this;
    }

    public GetGlobalHubsRequestBuilder count(Optional<Double> count) {
        Utils.checkNotNull(count, "count");
        this.count = count;
        return this;
    }
                
    public GetGlobalHubsRequestBuilder onlyTransient(OnlyTransient onlyTransient) {
        Utils.checkNotNull(onlyTransient, "onlyTransient");
        this.onlyTransient = Optional.of(onlyTransient);
        return this;
    }

    public GetGlobalHubsRequestBuilder onlyTransient(Optional<? extends OnlyTransient> onlyTransient) {
        Utils.checkNotNull(onlyTransient, "onlyTransient");
        this.onlyTransient = onlyTransient;
        return this;
    }


    private GetGlobalHubsRequest buildRequest() {

        GetGlobalHubsRequest request = new GetGlobalHubsRequest(count,
            onlyTransient);

        return request;
    }

    public GetGlobalHubsResponse call() throws Exception {
        
        RequestOperation<GetGlobalHubsRequest, GetGlobalHubsResponse> operation
              = new GetGlobalHubs.Sync(sdkConfiguration);
        GetGlobalHubsRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
