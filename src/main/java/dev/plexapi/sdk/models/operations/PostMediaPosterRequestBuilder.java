/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.plexapi.sdk.models.operations;

import static dev.plexapi.sdk.operations.Operations.RequestOperation;

import dev.plexapi.sdk.SDKConfiguration;
import dev.plexapi.sdk.operations.PostMediaPoster;
import dev.plexapi.sdk.utils.Utils;
import java.lang.Exception;
import java.lang.Long;
import java.lang.String;
import java.util.Optional;

public class PostMediaPosterRequestBuilder {

    private Long ratingKey;
    private Optional<String> url = Optional.empty();
    private Optional<byte[]> requestBody = Optional.empty();
    private final SDKConfiguration sdkConfiguration;

    public PostMediaPosterRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public PostMediaPosterRequestBuilder ratingKey(long ratingKey) {
        Utils.checkNotNull(ratingKey, "ratingKey");
        this.ratingKey = ratingKey;
        return this;
    }
                
    public PostMediaPosterRequestBuilder url(String url) {
        Utils.checkNotNull(url, "url");
        this.url = Optional.of(url);
        return this;
    }

    public PostMediaPosterRequestBuilder url(Optional<String> url) {
        Utils.checkNotNull(url, "url");
        this.url = url;
        return this;
    }
                
    public PostMediaPosterRequestBuilder requestBody(byte[] requestBody) {
        Utils.checkNotNull(requestBody, "requestBody");
        this.requestBody = Optional.of(requestBody);
        return this;
    }

    public PostMediaPosterRequestBuilder requestBody(Optional<byte[]> requestBody) {
        Utils.checkNotNull(requestBody, "requestBody");
        this.requestBody = requestBody;
        return this;
    }


    private PostMediaPosterRequest buildRequest() {

        PostMediaPosterRequest request = new PostMediaPosterRequest(ratingKey,
            url,
            requestBody);

        return request;
    }

    public PostMediaPosterResponse call() throws Exception {
        
        RequestOperation<PostMediaPosterRequest, PostMediaPosterResponse> operation
              = new PostMediaPoster.Sync(sdkConfiguration);
        PostMediaPosterRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
