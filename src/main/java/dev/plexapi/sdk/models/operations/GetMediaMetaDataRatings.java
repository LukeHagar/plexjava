/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.plexapi.sdk.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import dev.plexapi.sdk.utils.Utils;
import java.lang.Float;
import java.lang.Override;
import java.lang.String;


public class GetMediaMetaDataRatings {
    /**
     * The image or reference for the rating.
     */
    @JsonProperty("image")
    private String image;

    /**
     * The rating value.
     */
    @JsonProperty("value")
    private float value;

    /**
     * The type of rating (e.g., audience, critic).
     */
    @JsonProperty("type")
    private String type;

    @JsonCreator
    public GetMediaMetaDataRatings(
            @JsonProperty("image") String image,
            @JsonProperty("value") float value,
            @JsonProperty("type") String type) {
        Utils.checkNotNull(image, "image");
        Utils.checkNotNull(value, "value");
        Utils.checkNotNull(type, "type");
        this.image = image;
        this.value = value;
        this.type = type;
    }

    /**
     * The image or reference for the rating.
     */
    @JsonIgnore
    public String image() {
        return image;
    }

    /**
     * The rating value.
     */
    @JsonIgnore
    public float value() {
        return value;
    }

    /**
     * The type of rating (e.g., audience, critic).
     */
    @JsonIgnore
    public String type() {
        return type;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The image or reference for the rating.
     */
    public GetMediaMetaDataRatings withImage(String image) {
        Utils.checkNotNull(image, "image");
        this.image = image;
        return this;
    }

    /**
     * The rating value.
     */
    public GetMediaMetaDataRatings withValue(float value) {
        Utils.checkNotNull(value, "value");
        this.value = value;
        return this;
    }

    /**
     * The type of rating (e.g., audience, critic).
     */
    public GetMediaMetaDataRatings withType(String type) {
        Utils.checkNotNull(type, "type");
        this.type = type;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetMediaMetaDataRatings other = (GetMediaMetaDataRatings) o;
        return 
            Utils.enhancedDeepEquals(this.image, other.image) &&
            Utils.enhancedDeepEquals(this.value, other.value) &&
            Utils.enhancedDeepEquals(this.type, other.type);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            image, value, type);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetMediaMetaDataRatings.class,
                "image", image,
                "value", value,
                "type", type);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String image;

        private Float value;

        private String type;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * The image or reference for the rating.
         */
        public Builder image(String image) {
            Utils.checkNotNull(image, "image");
            this.image = image;
            return this;
        }


        /**
         * The rating value.
         */
        public Builder value(float value) {
            Utils.checkNotNull(value, "value");
            this.value = value;
            return this;
        }


        /**
         * The type of rating (e.g., audience, critic).
         */
        public Builder type(String type) {
            Utils.checkNotNull(type, "type");
            this.type = type;
            return this;
        }

        public GetMediaMetaDataRatings build() {

            return new GetMediaMetaDataRatings(
                image, value, type);
        }

    }
}
