/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.plexapi.sdk.models.operations.async;

import static dev.plexapi.sdk.operations.Operations.AsyncRequestOperation;

import dev.plexapi.sdk.SDKConfiguration;
import dev.plexapi.sdk.models.operations.UpdatePlayProgressRequest;
import dev.plexapi.sdk.operations.UpdatePlayProgress;
import dev.plexapi.sdk.utils.Utils;
import java.lang.Double;
import java.lang.Exception;
import java.lang.String;
import java.util.concurrent.CompletableFuture;

public class UpdatePlayProgressRequestBuilder {

    private String key;
    private Double time;
    private String state;
    private final SDKConfiguration sdkConfiguration;

    public UpdatePlayProgressRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public UpdatePlayProgressRequestBuilder key(String key) {
        Utils.checkNotNull(key, "key");
        this.key = key;
        return this;
    }

    public UpdatePlayProgressRequestBuilder time(double time) {
        Utils.checkNotNull(time, "time");
        this.time = time;
        return this;
    }

    public UpdatePlayProgressRequestBuilder state(String state) {
        Utils.checkNotNull(state, "state");
        this.state = state;
        return this;
    }


    private UpdatePlayProgressRequest buildRequest() {

        UpdatePlayProgressRequest request = new UpdatePlayProgressRequest(key,
            time,
            state);

        return request;
    }

    public CompletableFuture<UpdatePlayProgressResponse> call() throws Exception {
        
        AsyncRequestOperation<UpdatePlayProgressRequest, UpdatePlayProgressResponse> operation
              = new UpdatePlayProgress.Async(sdkConfiguration);
        UpdatePlayProgressRequest request = buildRequest();

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
