/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package lukehagar.plexapi.plexapi.models.operations;

import com.fasterxml.jackson.core.type.TypeReference;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Optional;
import java.util.stream.Stream;
import lukehagar.plexapi.plexapi.models.errors.SDKError;
import lukehagar.plexapi.plexapi.utils.LazySingletonValue;
import lukehagar.plexapi.plexapi.utils.Utils;
import org.openapitools.jackson.nullable.JsonNullable;


public class UpdatePlaylistRequestBuilder {

    private Double playlistID;
    private Optional<? extends String> title = Optional.empty();
    private Optional<? extends String> summary = Optional.empty();
    private final SDKMethodInterfaces.MethodCallUpdatePlaylist sdk;

    public UpdatePlaylistRequestBuilder(SDKMethodInterfaces.MethodCallUpdatePlaylist sdk) {
        this.sdk = sdk;
    }

    public UpdatePlaylistRequestBuilder playlistID(double playlistID) {
        Utils.checkNotNull(playlistID, "playlistID");
        this.playlistID = playlistID;
        return this;
    }
                
    public UpdatePlaylistRequestBuilder title(String title) {
        Utils.checkNotNull(title, "title");
        this.title = Optional.of(title);
        return this;
    }

    public UpdatePlaylistRequestBuilder title(Optional<? extends String> title) {
        Utils.checkNotNull(title, "title");
        this.title = title;
        return this;
    }
                
    public UpdatePlaylistRequestBuilder summary(String summary) {
        Utils.checkNotNull(summary, "summary");
        this.summary = Optional.of(summary);
        return this;
    }

    public UpdatePlaylistRequestBuilder summary(Optional<? extends String> summary) {
        Utils.checkNotNull(summary, "summary");
        this.summary = summary;
        return this;
    }

    public UpdatePlaylistResponse call() throws Exception {

        return sdk.updatePlaylist(
            playlistID,
            title,
            summary);
    }
}
