/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package lukehagar.plexapi.plexapi.models.operations;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import lukehagar.plexapi.plexapi.utils.SpeakeasyMetadata;
import lukehagar.plexapi.plexapi.utils.Utils;


public class GetMetadataChildrenRequest {

    /**
     * the id of the library item to return the children of.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=ratingKey")
    private double ratingKey;

    public GetMetadataChildrenRequest(
            double ratingKey) {
        Utils.checkNotNull(ratingKey, "ratingKey");
        this.ratingKey = ratingKey;
    }

    /**
     * the id of the library item to return the children of.
     */
    public double ratingKey() {
        return ratingKey;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * the id of the library item to return the children of.
     */
    public GetMetadataChildrenRequest withRatingKey(double ratingKey) {
        Utils.checkNotNull(ratingKey, "ratingKey");
        this.ratingKey = ratingKey;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetMetadataChildrenRequest other = (GetMetadataChildrenRequest) o;
        return 
            java.util.Objects.deepEquals(this.ratingKey, other.ratingKey);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            ratingKey);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetMetadataChildrenRequest.class,
                "ratingKey", ratingKey);
    }
    
    public final static class Builder {
 
        private Double ratingKey;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * the id of the library item to return the children of.
         */
        public Builder ratingKey(double ratingKey) {
            Utils.checkNotNull(ratingKey, "ratingKey");
            this.ratingKey = ratingKey;
            return this;
        }
        
        public GetMetadataChildrenRequest build() {
            return new GetMetadataChildrenRequest(
                ratingKey);
        }
    }
}

