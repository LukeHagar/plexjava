/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package lukehagar.plexapi.plexapi.models.operations;

import com.fasterxml.jackson.core.type.TypeReference;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Optional;
import java.util.stream.Stream;
import lukehagar.plexapi.plexapi.models.errors.SDKError;
import lukehagar.plexapi.plexapi.utils.LazySingletonValue;
import lukehagar.plexapi.plexapi.utils.Utils;
import org.openapitools.jackson.nullable.JsonNullable;


public class GetGlobalHubsRequestBuilder {

    private Optional<? extends Double> count = Optional.empty();
    private Optional<? extends OnlyTransient> onlyTransient = Optional.empty();
    private final SDKMethodInterfaces.MethodCallGetGlobalHubs sdk;

    public GetGlobalHubsRequestBuilder(SDKMethodInterfaces.MethodCallGetGlobalHubs sdk) {
        this.sdk = sdk;
    }
                
    public GetGlobalHubsRequestBuilder count(double count) {
        Utils.checkNotNull(count, "count");
        this.count = Optional.of(count);
        return this;
    }

    public GetGlobalHubsRequestBuilder count(Optional<? extends Double> count) {
        Utils.checkNotNull(count, "count");
        this.count = count;
        return this;
    }
                
    public GetGlobalHubsRequestBuilder onlyTransient(OnlyTransient onlyTransient) {
        Utils.checkNotNull(onlyTransient, "onlyTransient");
        this.onlyTransient = Optional.of(onlyTransient);
        return this;
    }

    public GetGlobalHubsRequestBuilder onlyTransient(Optional<? extends OnlyTransient> onlyTransient) {
        Utils.checkNotNull(onlyTransient, "onlyTransient");
        this.onlyTransient = onlyTransient;
        return this;
    }

    public GetGlobalHubsResponse call() throws Exception {

        return sdk.getGlobalHubs(
            count,
            onlyTransient);
    }
}
