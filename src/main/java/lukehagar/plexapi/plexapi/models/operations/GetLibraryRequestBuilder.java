/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package lukehagar.plexapi.plexapi.models.operations;

import com.fasterxml.jackson.core.type.TypeReference;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Optional;
import java.util.stream.Stream;
import lukehagar.plexapi.plexapi.models.errors.SDKError;
import lukehagar.plexapi.plexapi.utils.LazySingletonValue;
import lukehagar.plexapi.plexapi.utils.Utils;
import org.openapitools.jackson.nullable.JsonNullable;


public class GetLibraryRequestBuilder {

    private Double sectionId;
    private Optional<? extends IncludeDetails> includeDetails = Utils.readDefaultOrConstValue(
                            "includeDetails",
                            "0",
                            new TypeReference<Optional<? extends IncludeDetails>>() {});
    private final SDKMethodInterfaces.MethodCallGetLibrary sdk;

    public GetLibraryRequestBuilder(SDKMethodInterfaces.MethodCallGetLibrary sdk) {
        this.sdk = sdk;
    }

    public GetLibraryRequestBuilder sectionId(double sectionId) {
        Utils.checkNotNull(sectionId, "sectionId");
        this.sectionId = sectionId;
        return this;
    }
                
    public GetLibraryRequestBuilder includeDetails(IncludeDetails includeDetails) {
        Utils.checkNotNull(includeDetails, "includeDetails");
        this.includeDetails = Optional.of(includeDetails);
        return this;
    }

    public GetLibraryRequestBuilder includeDetails(Optional<? extends IncludeDetails> includeDetails) {
        Utils.checkNotNull(includeDetails, "includeDetails");
        this.includeDetails = includeDetails;
        return this;
    }

    public GetLibraryResponse call() throws Exception {
        if (includeDetails == null) {
            includeDetails = _SINGLETON_VALUE_IncludeDetails.value();
        }

        return sdk.getLibrary(
            sectionId,
            includeDetails);
    }

    private static final LazySingletonValue<Optional<? extends IncludeDetails>> _SINGLETON_VALUE_IncludeDetails =
            new LazySingletonValue<>(
                    "includeDetails",
                    "0",
                    new TypeReference<Optional<? extends IncludeDetails>>() {});
}
