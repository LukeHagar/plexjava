/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package dev.plexapi.sdk;

import static org.junit.jupiter.api.Assertions.assertEquals;

import dev.plexapi.sdk.models.operations.Collection;
import dev.plexapi.sdk.models.operations.Country;
import dev.plexapi.sdk.models.operations.Director;
import dev.plexapi.sdk.models.operations.FlattenSeasons;
import dev.plexapi.sdk.models.operations.Genre;
import dev.plexapi.sdk.models.operations.GetGlobalHubsMediaContainer;
import dev.plexapi.sdk.models.operations.GetGlobalHubsMetadata;
import dev.plexapi.sdk.models.operations.GetGlobalHubsResponse;
import dev.plexapi.sdk.models.operations.GetGlobalHubsResponseBody;
import dev.plexapi.sdk.models.operations.GetLibraryHubsCountry;
import dev.plexapi.sdk.models.operations.GetLibraryHubsDirector;
import dev.plexapi.sdk.models.operations.GetLibraryHubsGenre;
import dev.plexapi.sdk.models.operations.GetLibraryHubsHub;
import dev.plexapi.sdk.models.operations.GetLibraryHubsMedia;
import dev.plexapi.sdk.models.operations.GetLibraryHubsMediaContainer;
import dev.plexapi.sdk.models.operations.GetLibraryHubsMetadata;
import dev.plexapi.sdk.models.operations.GetLibraryHubsPart;
import dev.plexapi.sdk.models.operations.GetLibraryHubsResponse;
import dev.plexapi.sdk.models.operations.GetLibraryHubsResponseBody;
import dev.plexapi.sdk.models.operations.GetLibraryHubsRole;
import dev.plexapi.sdk.models.operations.GetLibraryHubsWriter;
import dev.plexapi.sdk.models.operations.GetRecentlyAddedActiveDirection;
import dev.plexapi.sdk.models.operations.GetRecentlyAddedDefaultDirection;
import dev.plexapi.sdk.models.operations.GetRecentlyAddedField;
import dev.plexapi.sdk.models.operations.GetRecentlyAddedFieldType;
import dev.plexapi.sdk.models.operations.GetRecentlyAddedFilter;
import dev.plexapi.sdk.models.operations.GetRecentlyAddedHubsResponseType;
import dev.plexapi.sdk.models.operations.GetRecentlyAddedHubsType;
import dev.plexapi.sdk.models.operations.GetRecentlyAddedImage;
import dev.plexapi.sdk.models.operations.GetRecentlyAddedMediaContainer;
import dev.plexapi.sdk.models.operations.GetRecentlyAddedMetadata;
import dev.plexapi.sdk.models.operations.GetRecentlyAddedOperator;
import dev.plexapi.sdk.models.operations.GetRecentlyAddedRequest;
import dev.plexapi.sdk.models.operations.GetRecentlyAddedResponse;
import dev.plexapi.sdk.models.operations.GetRecentlyAddedResponseBody;
import dev.plexapi.sdk.models.operations.GetRecentlyAddedSort;
import dev.plexapi.sdk.models.operations.GetRecentlyAddedType;
import dev.plexapi.sdk.models.operations.HasThumbnail;
import dev.plexapi.sdk.models.operations.Hub;
import dev.plexapi.sdk.models.operations.IncludeMeta;
import dev.plexapi.sdk.models.operations.Media;
import dev.plexapi.sdk.models.operations.MediaGuid;
import dev.plexapi.sdk.models.operations.Meta;
import dev.plexapi.sdk.models.operations.MetaDataRating;
import dev.plexapi.sdk.models.operations.OnlyTransient;
import dev.plexapi.sdk.models.operations.OptimizedForStreaming;
import dev.plexapi.sdk.models.operations.Part;
import dev.plexapi.sdk.models.operations.QueryParamOnlyTransient;
import dev.plexapi.sdk.models.operations.Role;
import dev.plexapi.sdk.models.operations.ShowOrdering;
import dev.plexapi.sdk.models.operations.Stream;
import dev.plexapi.sdk.models.operations.Type;
import dev.plexapi.sdk.models.operations.UltraBlurColors;
import dev.plexapi.sdk.models.operations.Writer;
import java.lang.Exception;
import java.time.LocalDate;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

public class HubsTests { 

    @Disabled // test marked as skipped for java or generated unit tests not production ready yet
    @Test
    public void testHubs_GetGlobalHubs() throws Exception {


        PlexAPI sdk = PlexAPI.builder()
                .accessToken("<YOUR_API_KEY_HERE>")
                .clientID("gcgzw5rz2xovp84b4vha3a40")
                .clientName("Plex Web")
                .clientVersion("4.133.0")
                .clientPlatform("Chrome")
                .deviceName("Linux")
            .build();

        GetGlobalHubsResponse res = sdk.hubs().getGlobalHubs()
                .count(6399.21d)
                .onlyTransient(OnlyTransient.ZERO)
                .call();

        assertEquals(
            GetGlobalHubsResponseBody.builder()
        .mediaContainer(GetGlobalHubsMediaContainer.builder()
            .size(8)
            .allowSync(true)
            .identifier("com.plexapp.plugins.library")
            .hub(List.of(
                Hub.builder()
                    .hubKey("/library/metadata/50768,65523,58188,57341,57302,57070")
                    .key("/playlists/all?type=15&sort=lastViewedAt:desc&playlistType=video,audio")
                    .title("Recent Playlists")
                    .type("playlist")
                    .hubIdentifier("home.playlists")
                    .context("hub.home.playlists")
                    .size(6)
                    .more(true)
                    .style("shelf")
                    .promoted(true)
                    .metadata(List.of(
                        GetGlobalHubsMetadata.builder()
                            .ratingKey("57070")
                            .key("/playlists/57070/items")
                            .guid("com.plexapp.agents.none://9fee6c5b-3143-4923-813e-57bd0190056c")
                            .type("playlist")
                            .title("November Movie Day")
                            .titleSort("Tracks")
                            .summary("")
                            .smart(false)
                            .playlistType("video")
                            .composite("/playlists/57070/composite/1668787730")
                            .icon("playlist://image.smart")
                            .viewCount(2)
                            .lastViewedAt(1668787732)
                            .duration(16873000)
                            .leafCount(3)
                            .addedAt(1668779618)
                            .updatedAt(1668787730)
                            .build()))
                    .build()))
            .build())
        .build(),
            res.object().get());
    }

    @Disabled // test marked as skipped for java or generated unit tests not production ready yet
    @Test
    public void testHubs_GetRecentlyAdded() throws Exception {


        PlexAPI sdk = PlexAPI.builder()
                .accessToken("<YOUR_API_KEY_HERE>")
                .clientID("gcgzw5rz2xovp84b4vha3a40")
                .clientName("Plex Web")
                .clientVersion("4.133.0")
                .clientPlatform("Chrome")
                .deviceName("Linux")
            .build();

        GetRecentlyAddedRequest req = GetRecentlyAddedRequest.builder()
                .contentDirectoryID(944669L)
                .type(Type.TvShow)
                .sectionID(2L)
                .includeMeta(IncludeMeta.Enable)
                .xPlexContainerStart(0)
                .xPlexContainerSize(50)
                .build();

        GetRecentlyAddedResponse res = sdk.hubs().getRecentlyAdded()
                .request(req)
                .call();

        assertEquals(
            GetRecentlyAddedResponseBody.builder()
        .mediaContainer(GetRecentlyAddedMediaContainer.builder()
            .size(50d)
            .identifier("com.plexapp.plugins.library")
            .meta(Meta.builder()
                .type(List.of(
                    GetRecentlyAddedType.builder()
                        .key("/library/sections/2/all?type=2")
                        .type("show")
                        .title("TV Shows")
                        .active(false)
                        .filter(List.of(
                            GetRecentlyAddedFilter.builder()
                                .filter("genre")
                                .filterType("string")
                                .key("/library/sections/2/genre?type=2")
                                .title("Genre")
                                .type("filter")
                                .build(),
                            GetRecentlyAddedFilter.builder()
                                .filter("genre")
                                .filterType("string")
                                .key("/library/sections/2/genre?type=2")
                                .title("Genre")
                                .type("filter")
                                .build(),
                            GetRecentlyAddedFilter.builder()
                                .filter("genre")
                                .filterType("string")
                                .key("/library/sections/2/genre?type=2")
                                .title("Genre")
                                .type("filter")
                                .build()))
                        .sort(List.of(
                            GetRecentlyAddedSort.builder()
                                .key("titleSort")
                                .title("Title")
                                .default_("asc")
                                .active(false)
                                .activeDirection(GetRecentlyAddedActiveDirection.Ascending)
                                .defaultDirection(GetRecentlyAddedDefaultDirection.Ascending)
                                .descKey("titleSort:desc")
                                .firstCharacterKey("/library/sections/2/firstCharacter")
                                .build()))
                        .field(List.of(
                            GetRecentlyAddedField.builder()
                                .key("show.title")
                                .title("Show Title")
                                .type("string")
                                .subType("rating")
                                .build(),
                            GetRecentlyAddedField.builder()
                                .key("show.title")
                                .title("Show Title")
                                .type("string")
                                .subType("rating")
                                .build(),
                            GetRecentlyAddedField.builder()
                                .key("show.title")
                                .title("Show Title")
                                .type("string")
                                .subType("rating")
                                .build()))
                        .build(),
                    GetRecentlyAddedType.builder()
                        .key("/library/sections/2/all?type=2")
                        .type("show")
                        .title("TV Shows")
                        .active(false)
                        .filter(List.of(
                            GetRecentlyAddedFilter.builder()
                                .filter("genre")
                                .filterType("string")
                                .key("/library/sections/2/genre?type=2")
                                .title("Genre")
                                .type("filter")
                                .build(),
                            GetRecentlyAddedFilter.builder()
                                .filter("genre")
                                .filterType("string")
                                .key("/library/sections/2/genre?type=2")
                                .title("Genre")
                                .type("filter")
                                .build(),
                            GetRecentlyAddedFilter.builder()
                                .filter("genre")
                                .filterType("string")
                                .key("/library/sections/2/genre?type=2")
                                .title("Genre")
                                .type("filter")
                                .build()))
                        .sort(List.of(
                            GetRecentlyAddedSort.builder()
                                .key("titleSort")
                                .title("Title")
                                .default_("asc")
                                .active(false)
                                .activeDirection(GetRecentlyAddedActiveDirection.Ascending)
                                .defaultDirection(GetRecentlyAddedDefaultDirection.Ascending)
                                .descKey("titleSort:desc")
                                .firstCharacterKey("/library/sections/2/firstCharacter")
                                .build(),
                            GetRecentlyAddedSort.builder()
                                .key("titleSort")
                                .title("Title")
                                .default_("asc")
                                .active(false)
                                .activeDirection(GetRecentlyAddedActiveDirection.Ascending)
                                .defaultDirection(GetRecentlyAddedDefaultDirection.Ascending)
                                .descKey("titleSort:desc")
                                .firstCharacterKey("/library/sections/2/firstCharacter")
                                .build(),
                            GetRecentlyAddedSort.builder()
                                .key("titleSort")
                                .title("Title")
                                .default_("asc")
                                .active(false)
                                .activeDirection(GetRecentlyAddedActiveDirection.Ascending)
                                .defaultDirection(GetRecentlyAddedDefaultDirection.Ascending)
                                .descKey("titleSort:desc")
                                .firstCharacterKey("/library/sections/2/firstCharacter")
                                .build()))
                        .field(List.of(
                            GetRecentlyAddedField.builder()
                                .key("show.title")
                                .title("Show Title")
                                .type("string")
                                .subType("rating")
                                .build(),
                            GetRecentlyAddedField.builder()
                                .key("show.title")
                                .title("Show Title")
                                .type("string")
                                .subType("rating")
                                .build(),
                            GetRecentlyAddedField.builder()
                                .key("show.title")
                                .title("Show Title")
                                .type("string")
                                .subType("rating")
                                .build()))
                        .build(),
                    GetRecentlyAddedType.builder()
                        .key("/library/sections/2/all?type=2")
                        .type("show")
                        .title("TV Shows")
                        .active(false)
                        .filter(List.of(
                            GetRecentlyAddedFilter.builder()
                                .filter("genre")
                                .filterType("string")
                                .key("/library/sections/2/genre?type=2")
                                .title("Genre")
                                .type("filter")
                                .build(),
                            GetRecentlyAddedFilter.builder()
                                .filter("genre")
                                .filterType("string")
                                .key("/library/sections/2/genre?type=2")
                                .title("Genre")
                                .type("filter")
                                .build(),
                            GetRecentlyAddedFilter.builder()
                                .filter("genre")
                                .filterType("string")
                                .key("/library/sections/2/genre?type=2")
                                .title("Genre")
                                .type("filter")
                                .build()))
                        .sort(List.of(
                            GetRecentlyAddedSort.builder()
                                .key("titleSort")
                                .title("Title")
                                .default_("asc")
                                .active(false)
                                .activeDirection(GetRecentlyAddedActiveDirection.Ascending)
                                .defaultDirection(GetRecentlyAddedDefaultDirection.Ascending)
                                .descKey("titleSort:desc")
                                .firstCharacterKey("/library/sections/2/firstCharacter")
                                .build(),
                            GetRecentlyAddedSort.builder()
                                .key("titleSort")
                                .title("Title")
                                .default_("asc")
                                .active(false)
                                .activeDirection(GetRecentlyAddedActiveDirection.Ascending)
                                .defaultDirection(GetRecentlyAddedDefaultDirection.Ascending)
                                .descKey("titleSort:desc")
                                .firstCharacterKey("/library/sections/2/firstCharacter")
                                .build()))
                        .field(List.of(
                            GetRecentlyAddedField.builder()
                                .key("show.title")
                                .title("Show Title")
                                .type("string")
                                .subType("rating")
                                .build(),
                            GetRecentlyAddedField.builder()
                                .key("show.title")
                                .title("Show Title")
                                .type("string")
                                .subType("rating")
                                .build(),
                            GetRecentlyAddedField.builder()
                                .key("show.title")
                                .title("Show Title")
                                .type("string")
                                .subType("rating")
                                .build()))
                        .build()))
                .fieldType(List.of(
                    GetRecentlyAddedFieldType.builder()
                        .type("tag")
                        .operator(List.of(
                            GetRecentlyAddedOperator.builder()
                                .key("=")
                                .title("is")
                                .build()))
                        .build(),
                    GetRecentlyAddedFieldType.builder()
                        .type("tag")
                        .operator(List.of(
                            GetRecentlyAddedOperator.builder()
                                .key("=")
                                .title("is")
                                .build()))
                        .build(),
                    GetRecentlyAddedFieldType.builder()
                        .type("tag")
                        .operator(List.of(
                            GetRecentlyAddedOperator.builder()
                                .key("=")
                                .title("is")
                                .build()))
                        .build()))
                .build())
            .metadata(List.of(
                GetRecentlyAddedMetadata.builder()
                    .ratingKey("58683")
                    .key("/library/metadata/58683")
                    .guid("plex://movie/5d7768ba96b655001fdc0408")
                    .type(GetRecentlyAddedHubsType.Movie)
                    .title("Avatar: The Way of Water")
                    .summary("Jake Sully lives with his newfound family formed on the extrasolar moon Pandora. Once a familiar threat returns to finish what was previously started, Jake must work with Neytiri and the army of the Na'vi race to protect their home.")
                    .addedAt(1556281940L)
                    .studio("20th Century Studios")
                    .skipChildren(false)
                    .librarySectionID(1L)
                    .librarySectionTitle("Movies")
                    .librarySectionKey("/library/sections/1")
                    .slug("4-for-texas")
                    .contentRating("PG-13")
                    .rating(7.6d)
                    .audienceRating(9.2d)
                    .year(2022)
                    .seasonCount(2022)
                    .tagline("Return to Pandora.")
                    .flattenSeasons(FlattenSeasons.True)
                    .showOrdering(ShowOrdering.Dvd)
                    .thumb("/library/metadata/58683/thumb/1703239236")
                    .art("/library/metadata/58683/art/1703239236")
                    .banner("/library/metadata/58683/banner/1703239236")
                    .duration(11558112)
                    .originallyAvailableAt(LocalDate.parse("2022-12-14T00:00:00Z"))
                    .updatedAt(1556281940L)
                    .audienceRatingImage("rottentomatoes://image.rating.upright")
                    .chapterSource("media")
                    .primaryExtraKey("/library/metadata/58684")
                    .ratingImage("rottentomatoes://image.rating.ripe")
                    .grandparentRatingKey("66")
                    .grandparentGuid("plex://show/5d9c081b170e24001f2a7be4")
                    .grandparentKey("/library/metadata/66")
                    .grandparentTitle("Caprica")
                    .grandparentThumb("/library/metadata/66/thumb/1705716261")
                    .parentSlug("alice-in-borderland-2020")
                    .grandparentSlug("alice-in-borderland-2020")
                    .grandparentArt("/library/metadata/66/art/1705716261")
                    .grandparentTheme("/library/metadata/66/theme/1705716261")
                    .media(List.of(
                        Media.builder()
                            .id(119534)
                            .duration(11558112)
                            .bitrate(25025)
                            .width(3840)
                            .height(2072)
                            .aspectRatio(1.85d)
                            .audioChannels(6)
                            .audioCodec("eac3")
                            .videoCodec("hevc")
                            .videoResolution("4k")
                            .container("mkv")
                            .videoFrameRate("24p")
                            .videoProfile("main 10")
                            .part(List.of(
                                Part.builder()
                                    .id(119542)
                                    .key("/library/parts/119542/1680457526/file.mkv")
                                    .duration(11558112)
                                    .file("/movies/Avatar The Way of Water (2022)/Avatar.The.Way.of.Water.2022.2160p.WEB-DL.DDP5.1.Atmos.DV.HDR10.HEVC-CMRG.mkv")
                                    .size(36158371307L)
                                    .container("mkv")
                                    .videoProfile("main 10")
                                    .audioProfile("dts")
                                    .has64bitOffsets(false)
                                    .optimizedForStreaming(false)
                                    .indexes("sd")
                                    .hasThumbnail(HasThumbnail.True)
                                    .stream(List.of(
                                        Stream.builder()
                                            .id(272796L)
                                            .streamType(1L)
                                            .codec("h264")
                                            .index(0L)
                                            .default_(true)
                                            .selected(true)
                                            .bitrate(6273L)
                                            .colorPrimaries("bt709")
                                            .colorRange("tv")
                                            .colorSpace("bt709")
                                            .colorTrc("bt709")
                                            .bitDepth(8L)
                                            .chromaLocation("left")
                                            .streamIdentifier("2")
                                            .chromaSubsampling("4:2:0")
                                            .codedHeight(1088L)
                                            .codedWidth(1920L)
                                            .frameRate(29.97d)
                                            .hasScalingMatrix(false)
                                            .hearingImpaired(false)
                                            .closedCaptions(false)
                                            .embeddedInVideo("1")
                                            .height(1080L)
                                            .level(40L)
                                            .profile("main")
                                            .refFrames(4L)
                                            .scanType("progressive")
                                            .width(1920L)
                                            .displayTitle("1080p (H.264)")
                                            .extendedDisplayTitle("1080p (H.264)")
                                            .channels(2L)
                                            .language("English")
                                            .languageTag("en")
                                            .languageCode("eng")
                                            .audioChannelLayout("stereo")
                                            .samplingRate(48000L)
                                            .title("English")
                                            .canAutoSync(false)
                                            .build()))
                                    .build()))
                            .audioProfile("dts")
                            .hasVoiceActivity(false)
                            .optimizedForStreaming(OptimizedForStreaming.Enable)
                            .has64bitOffsets(false)
                            .build()))
                    .genre(List.of(
                        Genre.builder()
                            .tag("Adventure")
                            .build()))
                    .country(List.of(
                        Country.builder()
                            .tag("United States of America")
                            .build()))
                    .director(List.of(
                        Director.builder()
                            .tag("James Cameron")
                            .build(),
                        Director.builder()
                            .tag("James Cameron")
                            .build()))
                    .writer(List.of(
                        Writer.builder()
                            .tag("James Cameron")
                            .build()))
                    .collection(List.of(
                        Collection.builder()
                            .tag("Working NL Subs")
                            .build()))
                    .role(List.of(
                        Role.builder()
                            .id(294129L)
                            .filter("actor=294129")
                            .thumb("https://metadata-static.plex.tv/2/people/27b85844536c39f3f9ac943aaad46608.jpg")
                            .tag("Mike Smith")
                            .tagKey("668e7e7b22bcad9064350c91")
                            .role("Self")
                            .build(),
                        Role.builder()
                            .id(294129L)
                            .filter("actor=294129")
                            .thumb("https://metadata-static.plex.tv/2/people/27b85844536c39f3f9ac943aaad46608.jpg")
                            .tag("Mike Smith")
                            .tagKey("668e7e7b22bcad9064350c91")
                            .role("Self")
                            .build(),
                        Role.builder()
                            .id(294129L)
                            .filter("actor=294129")
                            .thumb("https://metadata-static.plex.tv/2/people/27b85844536c39f3f9ac943aaad46608.jpg")
                            .tag("Mike Smith")
                            .tagKey("668e7e7b22bcad9064350c91")
                            .role("Self")
                            .build()))
                    .mediaGuid(List.of(
                        MediaGuid.builder()
                            .id("imdb://tt13015952")
                            .build(),
                        MediaGuid.builder()
                            .id("imdb://tt13015952")
                            .build(),
                        MediaGuid.builder()
                            .id("imdb://tt13015952")
                            .build()))
                    .ultraBlurColors(UltraBlurColors.builder()
                        .topLeft("11333b")
                        .topRight("0a232d")
                        .bottomRight("73958")
                        .bottomLeft("1f5066")
                        .build())
                    .metaDataRating(List.of(
                        MetaDataRating.builder()
                            .image("themoviedb://image.rating")
                            .value(3f)
                            .type("audience")
                            .build()))
                    .image(List.of(
                        GetRecentlyAddedImage.builder()
                            .alt("Episode 1")
                            .type(GetRecentlyAddedHubsResponseType.BACKGROUND)
                            .url("/library/metadata/45521/thumb/1644710589")
                            .build(),
                        GetRecentlyAddedImage.builder()
                            .alt("Episode 1")
                            .type(GetRecentlyAddedHubsResponseType.BACKGROUND)
                            .url("/library/metadata/45521/thumb/1644710589")
                            .build(),
                        GetRecentlyAddedImage.builder()
                            .alt("Episode 1")
                            .type(GetRecentlyAddedHubsResponseType.BACKGROUND)
                            .url("/library/metadata/45521/thumb/1644710589")
                            .build()))
                    .titleSort("Whale")
                    .viewCount(1)
                    .lastViewedAt(1682752242)
                    .originalTitle("映画 ブラッククローバー 魔法帝の剣")
                    .viewOffset(5222500)
                    .skipCount(1)
                    .index(1)
                    .theme("/library/metadata/1/theme/1705636920")
                    .leafCount(14)
                    .viewedLeafCount(0)
                    .childCount(1)
                    .hasPremiumExtras("1")
                    .hasPremiumPrimaryExtra("1")
                    .parentRatingKey("66")
                    .parentGuid("plex://show/5d9c081b170e24001f2a7be4")
                    .parentStudio("UCP")
                    .parentKey("/library/metadata/66")
                    .parentTitle("Caprica")
                    .parentIndex(1)
                    .parentYear(2010)
                    .parentThumb("/library/metadata/66/thumb/1705716261")
                    .parentTheme("/library/metadata/66/theme/1705716261")
                    .build()))
            .build())
        .build(),
            res.object().get());
    }

    @Disabled // test marked as skipped for java or generated unit tests not production ready yet
    @Test
    public void testHubs_GetLibraryHubs() throws Exception {


        PlexAPI sdk = PlexAPI.builder()
                .accessToken("<YOUR_API_KEY_HERE>")
                .clientID("gcgzw5rz2xovp84b4vha3a40")
                .clientName("Plex Web")
                .clientVersion("4.133.0")
                .clientPlatform("Chrome")
                .deviceName("Linux")
            .build();

        GetLibraryHubsResponse res = sdk.hubs().getLibraryHubs()
                .sectionId(5218.48d)
                .count(4146.62d)
                .onlyTransient(QueryParamOnlyTransient.ZERO)
                .call();

        assertEquals(
            GetLibraryHubsResponseBody.builder()
        .mediaContainer(GetLibraryHubsMediaContainer.builder()
            .size(7)
            .allowSync(true)
            .identifier("com.plexapp.plugins.library")
            .librarySectionID(1)
            .librarySectionTitle("Movies")
            .librarySectionUUID("322a231a-b7f7-49f5-920f-14c61199cd30")
            .hub(List.of(
                GetLibraryHubsHub.builder()
                    .key("/library/sections/1/all?sort=lastViewedAt:desc&unwatched=0&viewOffset=0")
                    .title("Recently Played Movies")
                    .type("movie")
                    .hubIdentifier("movie.recentlyviewed.1")
                    .context("hub.movie.recentlyviewed")
                    .size(6)
                    .more(true)
                    .style("shelf")
                    .hubKey("/library/metadata/66485,66098,57249,11449,5858,14944")
                    .metadata(List.of(
                        GetLibraryHubsMetadata.builder()
                            .ratingKey("14944")
                            .key("/library/metadata/14944")
                            .guid("plex://movie/5d77686eeb5d26001f1eb339")
                            .studio("Walt Disney Animation Studios")
                            .type("movie")
                            .title("Tangled")
                            .librarySectionTitle("Movies")
                            .librarySectionID(1)
                            .librarySectionKey("/library/sections/1")
                            .contentRating("PG")
                            .summary("The magically long-haired Rapunzel has spent her entire life in a tower, but now that a runaway thief has stumbled upon her, she is about to discover the world for the first time, and who she really is.")
                            .rating(8.9d)
                            .audienceRating(8.7d)
                            .viewCount(1)
                            .lastViewedAt(1704936047)
                            .year(2010)
                            .tagline("They're taking adventure to new lengths.")
                            .thumb("/library/metadata/14944/thumb/1705739847")
                            .art("/library/metadata/14944/art/1705739847")
                            .duration(6017237)
                            .originallyAvailableAt(LocalDate.parse("2010-11-24T00:00:00Z"))
                            .addedAt(1589412494)
                            .updatedAt(1705739847)
                            .audienceRatingImage("rottentomatoes://image.rating.upright")
                            .primaryExtraKey("/library/metadata/14952")
                            .ratingImage("rottentomatoes://image.rating.ripe")
                            .media(List.of(
                                GetLibraryHubsMedia.builder()
                                    .id(38247)
                                    .duration(6017237)
                                    .bitrate(2051)
                                    .width(1920)
                                    .height(1080)
                                    .aspectRatio(1.78d)
                                    .audioChannels(2)
                                    .audioCodec("aac")
                                    .videoCodec("h264")
                                    .videoResolution("1080")
                                    .container("mp4")
                                    .videoFrameRate("24p")
                                    .optimizedForStreaming(1)
                                    .audioProfile("lc")
                                    .has64bitOffsets(false)
                                    .videoProfile("high")
                                    .part(List.of(
                                        GetLibraryHubsPart.builder()
                                            .id(38247)
                                            .key("/library/parts/38247/1589412494/file.mp4")
                                            .duration(6017237)
                                            .file("/movies/Tangled (2010)/Tangled (2010) Bluray-1080p.mp4")
                                            .size(1545647447)
                                            .audioProfile("lc")
                                            .container("mp4")
                                            .has64bitOffsets(false)
                                            .optimizedForStreaming(true)
                                            .videoProfile("high")
                                            .build()))
                                    .build()))
                            .genre(List.of(
                                GetLibraryHubsGenre.builder()
                                    .tag("Animation")
                                    .build()))
                            .country(List.of(
                                GetLibraryHubsCountry.builder()
                                    .tag("United States of America")
                                    .build()))
                            .director(List.of(
                                GetLibraryHubsDirector.builder()
                                    .tag("Nathan Greno")
                                    .build()))
                            .role(List.of(
                                GetLibraryHubsRole.builder()
                                    .tag("Donna Murphy")
                                    .build()))
                            .writer(List.of(
                                GetLibraryHubsWriter.builder()
                                    .tag("Wilhelm Grimm")
                                    .build()))
                            .skipCount(1)
                            .chapterSource("media")
                            .build()))
                    .promoted(true)
                    .random(true)
                    .build()))
            .build())
        .build(),
            res.object().get());
    }

}