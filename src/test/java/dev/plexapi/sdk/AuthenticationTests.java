/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package dev.plexapi.sdk;

import static org.junit.jupiter.api.Assertions.assertEquals;

import dev.plexapi.sdk.models.operations.AutoSelectSubtitle;
import dev.plexapi.sdk.models.operations.Billing;
import dev.plexapi.sdk.models.operations.DefaultSubtitleAccessibility;
import dev.plexapi.sdk.models.operations.DefaultSubtitleForced;
import dev.plexapi.sdk.models.operations.GetSourceConnectionInformationResponse;
import dev.plexapi.sdk.models.operations.GetTokenDetailsAuthenticationResponseStatus;
import dev.plexapi.sdk.models.operations.GetTokenDetailsAuthenticationStatus;
import dev.plexapi.sdk.models.operations.GetTokenDetailsResponse;
import dev.plexapi.sdk.models.operations.GetTokenDetailsStatus;
import dev.plexapi.sdk.models.operations.GetTokenDetailsSubscription;
import dev.plexapi.sdk.models.operations.GetTokenDetailsUserPlexAccount;
import dev.plexapi.sdk.models.operations.GetTransientTokenQueryParamType;
import dev.plexapi.sdk.models.operations.GetTransientTokenResponse;
import dev.plexapi.sdk.models.operations.InternalPaymentMethod;
import dev.plexapi.sdk.models.operations.MailingListStatus;
import dev.plexapi.sdk.models.operations.MediaReviewsVisibility;
import dev.plexapi.sdk.models.operations.PastSubscription;
import dev.plexapi.sdk.models.operations.PostUsersSignInDataAuthenticationResponseStatus;
import dev.plexapi.sdk.models.operations.PostUsersSignInDataAuthenticationStatus;
import dev.plexapi.sdk.models.operations.PostUsersSignInDataAuthenticationSubscription;
import dev.plexapi.sdk.models.operations.PostUsersSignInDataAutoSelectSubtitle;
import dev.plexapi.sdk.models.operations.PostUsersSignInDataDefaultSubtitleAccessibility;
import dev.plexapi.sdk.models.operations.PostUsersSignInDataDefaultSubtitleForced;
import dev.plexapi.sdk.models.operations.PostUsersSignInDataMailingListStatus;
import dev.plexapi.sdk.models.operations.PostUsersSignInDataMediaReviewsVisibility;
import dev.plexapi.sdk.models.operations.PostUsersSignInDataRequest;
import dev.plexapi.sdk.models.operations.PostUsersSignInDataRequestBody;
import dev.plexapi.sdk.models.operations.PostUsersSignInDataResponse;
import dev.plexapi.sdk.models.operations.PostUsersSignInDataServices;
import dev.plexapi.sdk.models.operations.PostUsersSignInDataState;
import dev.plexapi.sdk.models.operations.PostUsersSignInDataStatus;
import dev.plexapi.sdk.models.operations.PostUsersSignInDataSubscription;
import dev.plexapi.sdk.models.operations.PostUsersSignInDataUserPlexAccount;
import dev.plexapi.sdk.models.operations.PostUsersSignInDataUserProfile;
import dev.plexapi.sdk.models.operations.PostUsersSignInDataWatchedIndicator;
import dev.plexapi.sdk.models.operations.Scope;
import dev.plexapi.sdk.models.operations.Services;
import dev.plexapi.sdk.models.operations.Subscription;
import dev.plexapi.sdk.models.operations.Trials;
import dev.plexapi.sdk.models.operations.UserProfile;
import dev.plexapi.sdk.models.operations.WatchedIndicator;
import java.lang.Exception;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Optional;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

public class AuthenticationTests { 

    @Disabled // test marked as skipped for java or generated unit tests not production ready yet
    @Test
    public void testAuthentication_GetTransientToken() throws Exception {


        PlexAPI sdk = PlexAPI.builder()
                .accessToken("<YOUR_API_KEY_HERE>")
                .clientID("gcgzw5rz2xovp84b4vha3a40")
                .clientName("Plex Web")
                .clientVersion("4.133.0")
                .clientPlatform("Chrome")
                .deviceName("Linux")
            .build();

        GetTransientTokenResponse res = sdk.authentication().getTransientToken()
                .type(GetTransientTokenQueryParamType.DELEGATION)
                .scope(Scope.ALL)
                .call();


    }

    @Disabled // test marked as skipped for java or generated unit tests not production ready yet
    @Test
    public void testAuthentication_GetSourceConnectionInformation() throws Exception {


        PlexAPI sdk = PlexAPI.builder()
                .accessToken("<YOUR_API_KEY_HERE>")
                .clientID("gcgzw5rz2xovp84b4vha3a40")
                .clientName("Plex Web")
                .clientVersion("4.133.0")
                .clientPlatform("Chrome")
                .deviceName("Linux")
            .build();

        GetSourceConnectionInformationResponse res = sdk.authentication().getSourceConnectionInformation()
                .source("server://client-identifier")
                .call();


    }

    @Disabled // test marked as skipped for java or generated unit tests not production ready yet
    @Test
    public void testAuthentication_GetTokenDetails() throws Exception {


        PlexAPI sdk = PlexAPI.builder()
                .accessToken("<YOUR_API_KEY_HERE>")
                .clientID("gcgzw5rz2xovp84b4vha3a40")
                .clientName("Plex Web")
                .clientVersion("4.133.0")
                .clientPlatform("Chrome")
                .deviceName("Linux")
            .build();

        GetTokenDetailsResponse res = sdk.authentication().getTokenDetails()
                .call();

        assertEquals(
            GetTokenDetailsUserPlexAccount.builder()
        .adsConsent(false)
        .adsConsentReminderAt(OffsetDateTime.parse("2022-06-24T05:32:09.341Z"))
        .adsConsentSetAt(OffsetDateTime.parse("2022-05-01T23:18:27.767Z"))
        .authToken("CxoUzBTSV5hsxjTpFKaf")
        .country("US")
        .email("username@email.com")
        .friendlyName("friendlyUsername")
        .entitlements(List.of(
            "[]"))
        .homeSize(1)
        .id(13692262)
        .joinedAt(1556281940L)
        .locale("sv")
        .mailingListStatus(MailingListStatus.ACTIVE)
        .maxHomeSize(15)
        .profile(UserProfile.builder()
            .defaultAudioLanguage("ja")
            .defaultSubtitleLanguage("en")
            .autoSelectAudio(true)
            .autoSelectSubtitle(AutoSelectSubtitle.Enable)
            .defaultSubtitleAccessibility(DefaultSubtitleAccessibility.Enable)
            .defaultSubtitleForced(DefaultSubtitleForced.Enable)
            .watchedIndicator(WatchedIndicator.Enable)
            .mediaReviewsVisibility(MediaReviewsVisibility.Enable)
            .build())
        .rememberExpiresAt(1556281940L)
        .scrobbleTypes("<value>")
        .services(List.of(
            Services.builder()
                .identifier("metadata-dev")
                .endpoint("https://epg.provider.plex.tv")
                .token("DjoMtqFAGRL1uVtCyF1dKIorTbShJeqv")
                .secret("<value>")
                .status(GetTokenDetailsStatus.ONLINE)
                .build()))
        .subscription(Subscription.builder()
            .active(true)
            .subscribedAt("2021-04-12T18:21:12Z")
            .status(GetTokenDetailsAuthenticationStatus.INACTIVE)
            .build())
        .subscriptionDescription("<value>")
        .subscriptions(List.of(
            GetTokenDetailsSubscription.builder()
                .active(true)
                .subscribedAt("2021-04-12T18:21:12Z")
                .status(GetTokenDetailsAuthenticationResponseStatus.INACTIVE)
                .build()))
        .thumb("https://plex.tv/users/a4f43c1ebfde43a5/avatar?c=8372075101")
        .title("UsernameTitle")
        .username("Username")
        .uuid("dae343c1f45beb4f")
        .attributionPartner(Optional.empty())
        .anonymous(false)
        .backupCodesCreated(false)
        .confirmed(false)
        .emailOnlyAuth(false)
        .experimentalFeatures(false)
        .guest(false)
        .hasPassword(true)
        .home(false)
        .homeAdmin(false)
        .mailingListActive(false)
        .pin("string")
        .protected_(false)
        .restricted(false)
        .roles(List.of(
            "string"))
        .twoFactorEnabled(false)
        .build(),
            res.userPlexAccount().get());
    }

    @Disabled // test marked as skipped for java or generated unit tests not production ready yet
    @Test
    public void testAuthentication_PostUsersSignInData() throws Exception {


        PlexAPI sdk = PlexAPI.builder()
                .clientID("gcgzw5rz2xovp84b4vha3a40")
                .clientName("Plex Web")
                .clientVersion("4.133.0")
                .clientPlatform("Chrome")
                .deviceName("Linux")
            .build();

        PostUsersSignInDataRequest req = PostUsersSignInDataRequest.builder()
                .requestBody(PostUsersSignInDataRequestBody.builder()
                    .login("username@email.com")
                    .password("password123")
                    .verificationCode("123456")
                    .build())
                .build();

        PostUsersSignInDataResponse res = sdk.authentication().postUsersSignInData()
                .request(req)
                .call();

        assertEquals(
            PostUsersSignInDataUserPlexAccount.builder()
        .adsConsent(false)
        .adsConsentReminderAt(OffsetDateTime.parse("2022-06-01T10:45:51.668Z"))
        .adsConsentSetAt(OffsetDateTime.parse("2022-08-04T10:54:08.790Z"))
        .authToken("CxoUzBTSV5hsxjTpFKaf")
        .country("US")
        .email("username@email.com")
        .friendlyName("friendlyUsername")
        .entitlements(List.of(
            "[]"))
        .homeSize(1)
        .id(13692262)
        .joinedAt(1556281940L)
        .locale("ja")
        .mailingListStatus(PostUsersSignInDataMailingListStatus.ACTIVE)
        .maxHomeSize(15)
        .profile(PostUsersSignInDataUserProfile.builder()
            .defaultAudioLanguage("ja")
            .defaultSubtitleLanguage("en")
            .autoSelectAudio(true)
            .autoSelectSubtitle(PostUsersSignInDataAutoSelectSubtitle.Enable)
            .defaultSubtitleAccessibility(PostUsersSignInDataDefaultSubtitleAccessibility.Enable)
            .defaultSubtitleForced(PostUsersSignInDataDefaultSubtitleForced.Enable)
            .watchedIndicator(PostUsersSignInDataWatchedIndicator.Enable)
            .mediaReviewsVisibility(PostUsersSignInDataMediaReviewsVisibility.Enable)
            .build())
        .rememberExpiresAt(1556281940L)
        .scrobbleTypes("<value>")
        .services(List.of(
            PostUsersSignInDataServices.builder()
                .identifier("metadata-dev")
                .endpoint("https://epg.provider.plex.tv")
                .token("DjoMtqFAGRL1uVtCyF1dKIorTbShJeqv")
                .secret("<value>")
                .status(PostUsersSignInDataStatus.ONLINE)
                .build()))
        .subscription(PostUsersSignInDataSubscription.builder()
            .active(true)
            .subscribedAt("2021-04-12T18:21:12Z")
            .status(PostUsersSignInDataAuthenticationStatus.INACTIVE)
            .build())
        .subscriptionDescription("<value>")
        .subscriptions(List.of(
            PostUsersSignInDataAuthenticationSubscription.builder()
                .active(true)
                .subscribedAt("2021-04-12T18:21:12Z")
                .status(PostUsersSignInDataAuthenticationResponseStatus.INACTIVE)
                .build()))
        .thumb("https://plex.tv/users/a4f43c1ebfde43a5/avatar?c=8372075101")
        .title("UsernameTitle")
        .username("Username")
        .uuid("dae343c1f45beb4f")
        .attributionPartner(Optional.empty())
        .pastSubscriptions(List.of(
            PastSubscription.builder()
                .id("<id>")
                .mode("<value>")
                .renewsAt(1556281940L)
                .endsAt(1556281940L)
                .type("plexpass")
                .transfer("<value>")
                .state(PostUsersSignInDataState.ENDED)
                .billing(Billing.builder()
                    .internalPaymentMethod(InternalPaymentMethod.builder()
                        .build())
                    .paymentMethodId(820994L)
                    .build())
                .canceled(false)
                .gracePeriod(false)
                .onHold(false)
                .canReactivate(false)
                .canUpgrade(false)
                .canDowngrade(false)
                .canConvert(false)
                .build()))
        .trials(List.of(
            Trials.builder()
                .build()))
        .anonymous(false)
        .backupCodesCreated(false)
        .confirmed(false)
        .emailOnlyAuth(false)
        .experimentalFeatures(false)
        .guest(false)
        .hasPassword(true)
        .home(false)
        .homeAdmin(false)
        .mailingListActive(false)
        .pin("string")
        .protected_(false)
        .restricted(false)
        .roles(List.of(
            "string"))
        .twoFactorEnabled(false)
        .build(),
            res.userPlexAccount().get());
    }

    @Disabled // test marked as skipped for java or generated unit tests not production ready yet
    @Test
    public void testAuthentication_PostUsersSignInData_() throws Exception {


        PlexAPI sdk = PlexAPI.builder()
                .clientID("gcgzw5rz2xovp84b4vha3a40")
                .clientName("Plex Web")
                .clientVersion("4.133.0")
                .clientPlatform("Chrome")
                .deviceName("Linux")
            .build();

        PostUsersSignInDataRequest req = PostUsersSignInDataRequest.builder()
                .requestBody(PostUsersSignInDataRequestBody.builder()
                    .login("username@email.com")
                    .password("password123")
                    .verificationCode("123456")
                    .build())
                .build();

        PostUsersSignInDataResponse res = sdk.authentication().postUsersSignInData()
                .request(req)
                .call();

        assertEquals(
            PostUsersSignInDataUserPlexAccount.builder()
        .adsConsent(false)
        .adsConsentReminderAt(OffsetDateTime.parse("2022-04-17T10:09:07.050Z"))
        .adsConsentSetAt(OffsetDateTime.parse("2024-07-07T09:18:10.249Z"))
        .authToken("CxoUzBTSV5hsxjTpFKaf")
        .country("US")
        .email("username@email.com")
        .friendlyName("friendlyUsername")
        .entitlements(List.of(
            "[]"))
        .homeSize(1)
        .id(13692262)
        .joinedAt(1556281940L)
        .locale("es")
        .mailingListStatus(PostUsersSignInDataMailingListStatus.ACTIVE)
        .maxHomeSize(15)
        .profile(PostUsersSignInDataUserProfile.builder()
            .defaultAudioLanguage("ja")
            .defaultSubtitleLanguage("en")
            .autoSelectAudio(true)
            .autoSelectSubtitle(PostUsersSignInDataAutoSelectSubtitle.Enable)
            .defaultSubtitleAccessibility(PostUsersSignInDataDefaultSubtitleAccessibility.Enable)
            .defaultSubtitleForced(PostUsersSignInDataDefaultSubtitleForced.Enable)
            .watchedIndicator(PostUsersSignInDataWatchedIndicator.Enable)
            .mediaReviewsVisibility(PostUsersSignInDataMediaReviewsVisibility.Enable)
            .build())
        .rememberExpiresAt(1556281940L)
        .scrobbleTypes("<value>")
        .services(List.of(
            PostUsersSignInDataServices.builder()
                .identifier("metadata-dev")
                .endpoint("https://epg.provider.plex.tv")
                .token("DjoMtqFAGRL1uVtCyF1dKIorTbShJeqv")
                .secret("<value>")
                .status(PostUsersSignInDataStatus.ONLINE)
                .build()))
        .subscription(PostUsersSignInDataSubscription.builder()
            .active(true)
            .subscribedAt("2021-04-12T18:21:12Z")
            .status(PostUsersSignInDataAuthenticationStatus.INACTIVE)
            .build())
        .subscriptionDescription("<value>")
        .subscriptions(List.of(
            PostUsersSignInDataAuthenticationSubscription.builder()
                .active(true)
                .subscribedAt("2021-04-12T18:21:12Z")
                .status(PostUsersSignInDataAuthenticationResponseStatus.INACTIVE)
                .build()))
        .thumb("https://plex.tv/users/a4f43c1ebfde43a5/avatar?c=8372075101")
        .title("UsernameTitle")
        .username("Username")
        .uuid("dae343c1f45beb4f")
        .attributionPartner(Optional.empty())
        .pastSubscriptions(List.of(
            PastSubscription.builder()
                .id("<id>")
                .mode("<value>")
                .renewsAt(1556281940L)
                .endsAt(1556281940L)
                .type("plexpass")
                .transfer("<value>")
                .state(PostUsersSignInDataState.ENDED)
                .billing(Billing.builder()
                    .internalPaymentMethod(InternalPaymentMethod.builder()
                        .build())
                    .paymentMethodId(976460L)
                    .build())
                .canceled(false)
                .gracePeriod(false)
                .onHold(false)
                .canReactivate(false)
                .canUpgrade(false)
                .canDowngrade(false)
                .canConvert(false)
                .build()))
        .trials(List.of(
            Trials.builder()
                .build()))
        .anonymous(false)
        .backupCodesCreated(false)
        .confirmed(false)
        .emailOnlyAuth(false)
        .experimentalFeatures(false)
        .guest(false)
        .hasPassword(true)
        .home(false)
        .homeAdmin(false)
        .mailingListActive(false)
        .pin("string")
        .protected_(false)
        .restricted(false)
        .roles(List.of(
            "string"))
        .twoFactorEnabled(false)
        .build(),
            res.userPlexAccount().get());
    }

}