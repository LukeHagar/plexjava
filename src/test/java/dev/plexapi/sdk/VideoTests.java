/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package dev.plexapi.sdk;

import dev.plexapi.sdk.models.operations.GetTimelineRequest;
import dev.plexapi.sdk.models.operations.GetTimelineResponse;
import dev.plexapi.sdk.models.operations.StartUniversalTranscodeRequest;
import dev.plexapi.sdk.models.operations.StartUniversalTranscodeResponse;
import dev.plexapi.sdk.models.operations.State;
import java.lang.Exception;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

public class VideoTests { 

    @Disabled // test marked as skipped for java or generated unit tests not production ready yet
    @Test
    public void testVideo_GetTimeline_() throws Exception {


        PlexAPI sdk = PlexAPI.builder()
                .accessToken("<YOUR_API_KEY_HERE>")
                .clientID("gcgzw5rz2xovp84b4vha3a40")
                .clientName("Plex Web")
                .clientVersion("4.133.0")
                .clientPlatform("Chrome")
                .deviceName("Linux")
            .build();

        GetTimelineRequest req = GetTimelineRequest.builder()
                .ratingKey(23409d)
                .key("/library/metadata/23409")
                .state(State.PLAYING)
                .hasMDE(1d)
                .time(2000d)
                .duration(10000d)
                .context("home:hub.continueWatching")
                .playQueueItemID(1d)
                .playBackTime(2000d)
                .row(1d)
                .build();

        GetTimelineResponse res = sdk.video().getTimeline()
                .request(req)
                .call();


    }

    @Disabled // test marked as skipped for java or generated unit tests not production ready yet
    @Test
    public void testVideo_StartUniversalTranscode_() throws Exception {


        PlexAPI sdk = PlexAPI.builder()
                .accessToken("<YOUR_API_KEY_HERE>")
                .clientID("gcgzw5rz2xovp84b4vha3a40")
                .clientName("Plex Web")
                .clientVersion("4.133.0")
                .clientPlatform("Chrome")
                .deviceName("Linux")
            .build();

        StartUniversalTranscodeRequest req = StartUniversalTranscodeRequest.builder()
                .hasMDE(1d)
                .path("/library/metadata/23409")
                .mediaIndex(0d)
                .partIndex(0d)
                .protocol("hls")
                .fastSeek(0d)
                .directPlay(0d)
                .directStream(0d)
                .subtitleSize(100d)
                .subtites("burn")
                .audioBoost(100d)
                .location("lan")
                .mediaBufferSize(102400d)
                .session("zvcage8b7rkioqcm8f4uns4c")
                .addDebugOverlay(0d)
                .autoAdjustQuality(0d)
                .build();

        StartUniversalTranscodeResponse res = sdk.video().startUniversalTranscode()
                .request(req)
                .call();


    }

}